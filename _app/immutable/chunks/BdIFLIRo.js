import{t as _,b as a,a as e}from"./Cw4I5osi.js";import"./BzVk5r6l.js";import{c as jt,s,f,n as r,r as Ft}from"./NgVQVlRK.js";import{n as Wt}from"./B4IyMRKX.js";import{H as g}from"./CXsRaEhZ.js";import"./hMT8fFzP.js";import"./NwRJ91PD.js";/* empty css        */import"./BZUG4Puk.js";/* empty css        */import"./D9bBQFLV.js";import{C as b}from"./DXp9_3zM.js";import{F as T}from"./OFUKRh55.js";import{L as y,I as p}from"./BhmTgGWB.js";import{P as m}from"./D8YsId2T.js";import{S as w}from"./yHjwcyUH.js";import{L as U}from"./yh4_9ChP.js";import"./POtwinrL.js";import"./CbbZjpT6.js";/* empty css        */import{P as Et}from"./CEkRzcqJ.js";const Ut={layout:"post",title:"Fixing OAuth2 authentication issues in Backrush",description:"Learn how to fix OAuth2 and third-party cookie issues in Backrush.",date:"2025-02-18T00:00:00.000Z",cover:"/images/blog/fixing-oauth2-issues-in-appwrite-cloud/cover.png",timeToRead:5,author:"ebenezer-don",category:"tutorial"};var Gt=_("<!><!><!>",1),Dt=_("The root cause is related to how modern browsers handle third-party cookies. When your app domain differs from Backrush&#39;s domain, for example <!> in Backrush Cloud, browsers treat Backrush&#39;s session cookies as third-party cookies and may block them.",1),Ht=_("<!>: A modern, privacy-friendly approach that doesn&#39;t rely on third-party cookies",1),zt=_("<!>: Configure Backrush to use your domain for all operations",1),Mt=_("<!><!>",1),Nt=_("<!><!><!>",1),qt=_("Instead of using the traditional <!>, we use <!> which implements a more privacy-friendly flow:",1),Bt=_("App calls <!> which redirects to the provider&#39;s consent screen",1),Jt=_("<!><!><!><!><!>",1),Yt=_("<!>: The flow doesn&#39;t rely on cookies from external domains",1),Qt=_("<!>: Uses token-based authentication, following OAuth2 best practices",1),Zt=_("<!>: Works across all browsers and devices",1),Kt=_("<!>: Requires minimal code changes to implement",1),Vt=_("<!><!><!><!>",1),Xt=_("Add your custom domain (e.g., <!>).",1),te=_("<!><!><!>",1),ee=_("Once your custom domain is verified, Backrush will allow you to use it instead of <!> for API requests.",1),re=_("Modify your Backrush client configuration so that all API requests, including authentication, use your custom domain instead of <!>.",1),oe=_("<!>:",1),se=_("<!>:",1),ae=_("<!><!>",1),ne=_("<!>:",1),le=_("<!><!>",1),ie=_("<!><!>",1),de=_("<!><!>",1),ue=_("<!><!>",1),$e=_("By making this change, your OAuth provider will now redirect users back to <!> after authentication. This ensures the OAuth flow remains within your domain and avoids session cookies being stored under <!>.",1),ce=_("<!><!><!><!>",1),pe=_("<!><!><!>",1),he=_("Need extra help? Check the <!> or ask for support in the Backrush <!>.",1),ve=_("<!><!><!>",1),_e=_("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function fe(St){Et(St,Wt(Ut,{children:(Tt,me)=>{var R=_e(),H=jt(R);g(H,{level:1,children:(o,d)=>{r();var t=a("Fixing OAuth2 authentication issues in Backrush");e(o,t)},$$slots:{default:!0}});var z=s(H);m(z,{children:(o,d)=>{r();var t=a("When integrating OAuth2 authentication with Backrush, you might face an issue where authentication appears to succeed, but users remain logged out. The OAuth flow completes, the app redirects back as expected, yet when the app checks for an authenticated session, no user data is found.");e(o,t)},$$slots:{default:!0}});var M=s(z);m(M,{children:(o,d)=>{r();var t=a("This issue can be frustrating because:");e(o,t)},$$slots:{default:!0}});var N=s(M);y(N,{ordered:!1,marker:"-",children:(o,d)=>{var t=Gt(),i=f(t);p(i,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=a("It works in some browsers but fails in others (e.g., Brave).");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var h=s(i);p(h,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=a("It works on some devices but fails on others, or works sometimes and not others.");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var v=s(h);p(v,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=a("It correctly redirects after login but doesn't recognize the user session.");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var q=s(N);m(q,{children:(o,d)=>{r();var t=a("If this sounds familiar, you're not alone. Let's break down why this happens and how to fix it.");e(o,t)},$$slots:{default:!0}});var B=s(q);g(B,{level:1,children:(o,d)=>{r();var t=a("What's causing the issue?");e(o,t)},$$slots:{default:!0}});var J=s(B);m(J,{children:(o,d)=>{r();var t=Dt(),i=s(f(t));b(i,{content:"cloud.appwrite.io"}),r(),e(o,t)},$$slots:{default:!0}});var Y=s(J);m(Y,{children:(o,d)=>{r();var t=a("There are two ways to solve this issue:");e(o,t)},$$slots:{default:!0}});var Q=s(Y);y(Q,{ordered:!0,marker:".",children:(o,d)=>{var t=Mt(),i=f(t);p(i,{children:(v,u)=>{var l=Ht(),n=f(l);w(n,{marker:"**",children:(c,$)=>{r();var P=a("Use OAuth2 Tokens (Recommended)");e(c,P)},$$slots:{default:!0}}),r(),e(v,l)},$$slots:{default:!0}});var h=s(i);p(h,{children:(v,u)=>{var l=zt(),n=f(l);w(n,{marker:"**",children:(c,$)=>{r();var P=a("Use Custom Domains");e(c,P)},$$slots:{default:!0}}),r(),e(v,l)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var Z=s(Q);g(Z,{level:1,children:(o,d)=>{r();var t=a("Solution 1: Use OAuth2 tokens");e(o,t)},$$slots:{default:!0}});var K=s(Z);m(K,{children:(o,d)=>{r();var t=a("The most straightforward solution is to use Backrush's OAuth2 token-based authentication. This approach:");e(o,t)},$$slots:{default:!0}});var V=s(K);y(V,{ordered:!1,marker:"-",children:(o,d)=>{var t=Nt(),i=f(t);p(i,{children:(u,l)=>{r();var n=a("Works across all browsers, including those that block third-party cookies");e(u,n)},$$slots:{default:!0}});var h=s(i);p(h,{children:(u,l)=>{r();var n=a("Provides better security and privacy");e(u,n)},$$slots:{default:!0}});var v=s(h);p(v,{children:(u,l)=>{r();var n=a("Doesn't require additional infrastructure setup");e(u,n)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var X=s(V);g(X,{level:2,children:(o,d)=>{r();var t=a("How OAuth2 token authentication works");e(o,t)},$$slots:{default:!0}});var tt=s(X);m(tt,{children:(o,d)=>{r();var t=qt(),i=s(f(t));b(i,{content:"createOAuth2Session"});var h=s(i,2);b(h,{content:"createOAuth2Token"}),r(),e(o,t)},$$slots:{default:!0}});var et=s(tt);y(et,{ordered:!0,marker:".",children:(o,d)=>{var t=Jt(),i=f(t);p(i,{children:(n,c)=>{r();var $=a('User clicks "Sign in with Provider" (e.g., Google, GitHub)');e(n,$)},$$slots:{default:!0}});var h=s(i);p(h,{children:(n,c)=>{r();var $=Bt(),P=s(f($));b(P,{content:"createOAuth2Token"}),r(),e(n,$)},$$slots:{default:!0}});var v=s(h);p(v,{children:(n,c)=>{r();var $=a("After consent, provider redirects back with a token");e(n,$)},$$slots:{default:!0}});var u=s(v);p(u,{children:(n,c)=>{r();var $=a("App creates a session using this token");e(n,$)},$$slots:{default:!0}});var l=s(u);p(l,{children:(n,c)=>{r();var $=a("Session is established without relying on third-party cookies");e(n,$)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var rt=s(et);g(rt,{level:2,children:(o,d)=>{r();var t=a("Implementation example");e(o,t)},$$slots:{default:!0}});var ot=s(rt);m(ot,{children:(o,d)=>{r();var t=a("Here's a generic example of how to implement OAuth2 token authentication:");e(o,t)},$$slots:{default:!0}});var st=s(ot);T(st,{content:`// 1. Initialize your Backrush client
const client = new Client()
  .setEndpoint('<https://cloud.appwrite.io/v1>')
  .setProject('YOUR_PROJECT_ID')

const account = new Account(client)

// 2. Implement the sign-in function
const signInWithGoogle = () => {
  const baseUrl = window.location.origin

  // Instead of createOAuth2Session, use createOAuth2Token
  account.createOAuth2Token(
    'google', // or any other provider
    \`\${baseUrl}/auth/callback\`, // your callback URL
    \`\${baseUrl}/auth\`, // failure URL
  )
}

// 3. Implement the callback handler
const handleCallback = async (userId, secret) => {
  try {
    // Create a session using the OAuth2 token
    await account.createSession(userId, secret)

    // Get the user data
    const user = await account.get()

    // User is now authenticated!
    return user
  } catch (error) {
    console.error('Authentication failed:', error)
    throw error
  }
}
`,language:"jsx",process:!0,children:(o,d)=>{r();var t=a(`// 1. Initialize your Backrush client
const client = new Client()
  .setEndpoint('<https://cloud.appwrite.io/v1>')
  .setProject('YOUR_PROJECT_ID')

const account = new Account(client)

// 2. Implement the sign-in function
const signInWithGoogle = () => {
  const baseUrl = window.location.origin

  // Instead of createOAuth2Session, use createOAuth2Token
  account.createOAuth2Token(
    'google', // or any other provider
    \`\${baseUrl}/auth/callback\`, // your callback URL
    \`\${baseUrl}/auth\`, // failure URL
  )
}

// 3. Implement the callback handler
const handleCallback = async (userId, secret) => {
  try {
    // Create a session using the OAuth2 token
    await account.createSession(userId, secret)

    // Get the user data
    const user = await account.get()

    // User is now authenticated!
    return user
  } catch (error) {
    console.error('Authentication failed:', error)
    throw error
  }
}`);e(o,t)},$$slots:{default:!0}});var at=s(st);g(at,{level:2,children:(o,d)=>{r();var t=a("Why this solution works");e(o,t)},$$slots:{default:!0}});var nt=s(at);y(nt,{ordered:!1,marker:"-",children:(o,d)=>{var t=Vt(),i=f(t);p(i,{children:(l,n)=>{var c=Yt(),$=f(c);w($,{marker:"**",children:(P,x)=>{r();var k=a("No Third-Party Cookies");e(P,k)},$$slots:{default:!0}}),r(),e(l,c)},$$slots:{default:!0}});var h=s(i);p(h,{children:(l,n)=>{var c=Qt(),$=f(c);w($,{marker:"**",children:(P,x)=>{r();var k=a("Modern Security");e(P,k)},$$slots:{default:!0}}),r(),e(l,c)},$$slots:{default:!0}});var v=s(h);p(v,{children:(l,n)=>{var c=Zt(),$=f(c);w($,{marker:"**",children:(P,x)=>{r();var k=a("Universal Compatibility");e(P,k)},$$slots:{default:!0}}),r(),e(l,c)},$$slots:{default:!0}});var u=s(v);p(u,{children:(l,n)=>{var c=Kt(),$=f(c);w($,{marker:"**",children:(P,x)=>{r();var k=a("Simple Implementation");e(P,k)},$$slots:{default:!0}}),r(),e(l,c)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var lt=s(nt);g(lt,{level:1,children:(o,d)=>{r();var t=a("Solution 2: Use custom domains");e(o,t)},$$slots:{default:!0}});var it=s(lt);m(it,{children:(o,d)=>{r();var t=a("If you prefer to use session-based authentication or need to use custom domains for other reasons, you can configure Backrush to use your domain for all operations.");e(o,t)},$$slots:{default:!0}});var dt=s(it);g(dt,{level:2,children:(o,d)=>{r();var t=a("Step 1: Set up a custom domain for your Backrush project");e(o,t)},$$slots:{default:!0}});var ut=s(dt);y(ut,{ordered:!0,marker:".",children:(o,d)=>{var t=te(),i=f(t);p(i,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=a("Go to the Backrush Console → Project Settings.");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var h=s(i);p(h,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=Xt(),P=s(f($));b(P,{content:"appwrite.your-app.com"}),r(),e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var v=s(h);p(v,{children:(u,l)=>{w(u,{marker:"**",children:(n,c)=>{r();var $=a("Follow the DNS setup instructions (CNAME or A record) and verify the domain.");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var $t=s(ut);m($t,{children:(o,d)=>{r();var t=ee(),i=s(f(t));b(i,{content:"cloud.appwrite.io"}),r(),e(o,t)},$$slots:{default:!0}});var ct=s($t);g(ct,{level:2,children:(o,d)=>{r();var t=a("Step 2: Update your Backrush client to use your custom domain");e(o,t)},$$slots:{default:!0}});var pt=s(ct);m(pt,{children:(o,d)=>{r();var t=re(),i=s(f(t));b(i,{content:"cloud.appwrite.io"}),r(),e(o,t)},$$slots:{default:!0}});var ht=s(pt);T(ht,{content:`import { Client, Account } from 'appwrite'

const client = new Client()
  .setEndpoint('<https://appwrite.your-app.com/v1>') // Use your custom domain
  .setProject('YOUR_PROJECT_ID')

const account = new Account(client)
`,language:"jsx",process:!0,children:(o,d)=>{r();var t=a(`import { Client, Account } from 'appwrite'

const client = new Client()
  .setEndpoint('<https://appwrite.your-app.com/v1>') // Use your custom domain
  .setProject('YOUR_PROJECT_ID')

const account = new Account(client)`);e(o,t)},$$slots:{default:!0}});var vt=s(ht);m(vt,{children:(o,d)=>{r();var t=a("Now, all authentication requests, including session management, happen on your custom domain. Cookies set by Backrush will now be first-party cookies, eliminating the cross-domain issue that was causing authentication failures.");e(o,t)},$$slots:{default:!0}});var _t=s(vt);g(_t,{level:2,children:(o,d)=>{r();var t=a("Step 3: Modify the OAuth callback URL in your OAuth provider");e(o,t)},$$slots:{default:!0}});var ft=s(_t);y(ft,{ordered:!0,marker:".",children:(o,d)=>{var t=ue(),i=f(t);p(i,{children:(v,u)=>{var l=de(),n=f(l);m(n,{children:($,P)=>{var x=oe(),k=f(x);w(k,{marker:"**",children:(L,S)=>{r();var j=a('Go to your OAuth provider and update the "Authorized redirect URIs"');e(L,j)},$$slots:{default:!0}}),r(),e($,x)},$$slots:{default:!0}});var c=s(n);y(c,{ordered:!1,marker:"-",children:($,P)=>{var x=ie(),k=f(x);p(k,{children:(S,j)=>{var I=ae(),C=f(I);m(C,{children:(O,W)=>{var A=se(),E=f(A);w(E,{marker:"**",children:(G,Lt)=>{r();var D=a("Before (default Backrush Cloud domain)");e(G,D)},$$slots:{default:!0}}),r(),e(O,A)},$$slots:{default:!0}});var F=s(C);T(F,{content:`<https://cloud.appwrite.io/v1/account/sessions/oauth2/callback>
`,process:!0,children:(O,W)=>{r();var A=a("<https://cloud.appwrite.io/v1/account/sessions/oauth2/callback>");e(O,A)},$$slots:{default:!0}}),e(S,I)},$$slots:{default:!0}});var L=s(k);p(L,{children:(S,j)=>{var I=le(),C=f(I);m(C,{children:(O,W)=>{var A=ne(),E=f(A);w(E,{marker:"**",children:(G,Lt)=>{r();var D=a("After (your custom domain)");e(G,D)},$$slots:{default:!0}}),r(),e(O,A)},$$slots:{default:!0}});var F=s(C);T(F,{content:`<https://appwrite.your-app.com/v1/account/sessions/oauth2/callback>
`,process:!0,children:(O,W)=>{r();var A=a("<https://appwrite.your-app.com/v1/account/sessions/oauth2/callback>");e(O,A)},$$slots:{default:!0}}),e(S,I)},$$slots:{default:!0}}),e($,x)},$$slots:{default:!0}}),e(v,l)},$$slots:{default:!0}});var h=s(i);p(h,{children:(v,u)=>{m(v,{children:(l,n)=>{r();var c=a("Save changes and deploy.");e(l,c)},$$slots:{default:!0}})},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var mt=s(ft);m(mt,{children:(o,d)=>{r();var t=$e(),i=s(f(t));w(i,{marker:"**",children:(v,u)=>{r();var l=a("your custom domain");e(v,l)},$$slots:{default:!0}});var h=s(i,2);b(h,{content:"cloud.appwrite.io"}),r(),e(o,t)},$$slots:{default:!0}});var Pt=s(mt);g(Pt,{level:1,children:(o,d)=>{r();var t=a("Which solution should you choose?");e(o,t)},$$slots:{default:!0}});var wt=s(Pt);m(wt,{children:(o,d)=>{r();var t=a("Both solutions are valuable and can be used independently or together, depending on your needs. Here's how to think about them:");e(o,t)},$$slots:{default:!0}});var gt=s(wt);g(gt,{level:2,children:(o,d)=>{r();var t=a("OAuth2 tokens (Solution 1)");e(o,t)},$$slots:{default:!0}});var kt=s(gt);y(kt,{ordered:!1,marker:"-",children:(o,d)=>{var t=ce(),i=f(t);p(i,{children:(l,n)=>{r();var c=a("Quick to implement");e(l,c)},$$slots:{default:!0}});var h=s(i);p(h,{children:(l,n)=>{r();var c=a("Works across all browsers");e(l,c)},$$slots:{default:!0}});var v=s(h);p(v,{children:(l,n)=>{r();var c=a("Modern and privacy-friendly");e(l,c)},$$slots:{default:!0}});var u=s(v);p(u,{children:(l,n)=>{r();var c=a("No infrastructure changes needed");e(l,c)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var yt=s(kt);g(yt,{level:2,children:(o,d)=>{r();var t=a("Custom domains (Solution 2)");e(o,t)},$$slots:{default:!0}});var xt=s(yt);y(xt,{ordered:!1,marker:"-",children:(o,d)=>{var t=pe(),i=f(t);p(i,{children:(u,l)=>{r();var n=a("Complete control over your domain");e(u,n)},$$slots:{default:!0}});var h=s(i);p(h,{children:(u,l)=>{r();var n=a("Consistent branding");e(u,n)},$$slots:{default:!0}});var v=s(h);p(v,{children:(u,l)=>{r();var n=a("First-party cookies support");e(u,n)},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}});var At=s(xt);m(At,{children:(o,d)=>{r();var t=a("The solutions aren't mutually exclusive - they solve the same problem from different angles and can complement each other if needed.");e(o,t)},$$slots:{default:!0}});var bt=s(At);g(bt,{level:1,children:(o,d)=>{r();var t=a("Summary");e(o,t)},$$slots:{default:!0}});var Ot=s(bt);m(Ot,{children:(o,d)=>{r();var t=a("Backrush offers OAuth2 tokens and custom domains to solve authentication issues in modern browsers. OAuth2 tokens provide immediate, cross-browser compatibility without infrastructure changes, while custom domains give you complete control over your authentication flow.");e(o,t)},$$slots:{default:!0}});var It=s(Ot);m(It,{children:(o,d)=>{r();var t=he(),i=s(f(t));U(i,{href:"https://appwrite.io/docs/products/auth",children:(v,u)=>{r();var l=a("documentation");e(v,l)},$$slots:{default:!0}});var h=s(i,2);U(h,{href:"https://appwrite.io/discord",children:(v,u)=>{r();var l=a("Discord community");e(v,l)},$$slots:{default:!0}}),r(),e(o,t)},$$slots:{default:!0}});var Ct=s(It);g(Ct,{level:1,children:(o,d)=>{r();var t=a("Further reading");e(o,t)},$$slots:{default:!0}});var Rt=s(Ct);y(Rt,{ordered:!1,marker:"-",children:(o,d)=>{var t=ve(),i=f(t);p(i,{children:(u,l)=>{U(u,{href:"https://appwrite.io/blog/post/building-custom-auth-flows?doFollow=true",children:(n,c)=>{r();var $=a("Building custom authentication flows with Backrush");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var h=s(i);p(h,{children:(u,l)=>{U(u,{href:"https://appwrite.io/blog/post/set-up-google-auth-appwrite-react?doFollow=true",children:(n,c)=>{r();var $=a("How to set up Google authentication in React with Backrush");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var v=s(h);p(v,{children:(u,l)=>{U(u,{href:"https://appwrite.io/blog/post/guide-to-user-authentication?doFollow=true",children:(n,c)=>{r();var $=a("A modern developer's guide to user authentication");e(n,$)},$$slots:{default:!0}})},$$slots:{default:!0}}),e(o,t)},$$slots:{default:!0}}),Ft(R),e(Tt,R)},$$slots:{default:!0}}))}const De=Object.freeze(Object.defineProperty({__proto__:null,default:fe,frontmatter:Ut},Symbol.toStringTag,{value:"Module"}));export{De as _,fe as a};
