import{t as d,b as a,a as e}from"./Cw4I5osi.js";import"./BzVk5r6l.js";import{s as o,f as u,c as ce,n as t,r as $e}from"./NgVQVlRK.js";import{n as he}from"./B4IyMRKX.js";import{H as U}from"./CXsRaEhZ.js";import"./hMT8fFzP.js";import"./NwRJ91PD.js";/* empty css        */import"./BZUG4Puk.js";/* empty css        */import"./D9bBQFLV.js";import{F as ve}from"./OFUKRh55.js";import{L as S,I as h}from"./BhmTgGWB.js";import{P as T}from"./D8YsId2T.js";import{S as f}from"./yHjwcyUH.js";import{L as pe}from"./yh4_9ChP.js";import"./POtwinrL.js";import"./CbbZjpT6.js";/* empty css        */import{P as fe}from"./CEkRzcqJ.js";const ie={layout:"post",title:"Understanding OAuth and OpenID Connect",description:"How OAuth and OpenID Connect work and why they are beneficial for application security.",date:"2024-03-07T00:00:00.000Z",cover:"/images/blog/oauth-openid.png",timeToRead:6,author:"aditya-oberai",category:"authentication, security"};var _e=d("When it comes to web security, <!> and <!> have revolutionized how we manage and secure user authentication and authorization. OAuth, primarily a protocol for authorization, enables third-party access to user data without exposing their credentials. On the other hand, OIDC, built on top of OAuth 2.0, extends this protocol by adding user authentication. These technologies provide a secure, efficient way for users to log in and share information across different services without compromising their privacy or security.",1),me=d("<!>: The process begins when a user tries to access a resource or service that requires them to log in via a third-party service (like logging into a website using their Google account). The website (client) redirects the user to log in to the third-party service (authorization server).",1),ge=d("<!>: The user logs in to the third-party service. This step involves user authentication by the third-party service, but this authentication process is not part of OAuth—it&#39;s handled entirely by the third-party service.",1),Pe=d("<!>: After successful login, the third-party service asks the user if they want to grant the requesting website access to their information. If the user consents, the third-party service (authorization server) redirects the user back to the website with an authorization code.",1),ye=d("<!>: The website (now having the authorization code) makes a separate request to the third-party service, exchanging the authorization code for an access token.",1),ke=d("<!>: The third-party service responds with an access token (and sometimes a refresh token).",1),Oe=d("<!>: The website uses this access token to make requests to the third-party service’s resource server to access the user’s information. The resource server validates the access token and returns the requested resource.",1),xe=d("<!><!><!><!><!><!>",1),we=d("<!>: Allowing users to log in to websites and apps using their social media accounts.",1),be=d("<!>: Enabling apps to access services like email or calendars on behalf of the user.",1),Ae=d("<!>: Facilitating one-login access to multiple enterprise applications.",1),Ie=d("<!>: Letting third-party vendors access transaction details or initiate payments via services like PayPal.",1),Ce=d("<!>: Connecting mobile apps with other services and platforms for enhanced functionality.",1),De=d("<!><!><!><!><!>",1),Te=d("<!> is a framework for authorization. It allows applications to obtain limited access to a user&#39;s data on another application or service.",1),Se=d("<!> is built on top of OAuth 2.0 and is specifically designed for authentication. It allows applications to verify the identity of a user and obtain basic profile information.",1),ze=d("<!><!>",1),Ee=d("<!>:<!>",1),Ue=d("<!> provides access tokens, which are used by applications to access APIs on behalf of the user.",1),Re=d("<!> provides an ID Token in addition to the access token. The ID Token is a JWT (JSON Web Token) used for identity verification and contains user profile information.",1),Le=d("<!><!>",1),Ne=d("<!>:<!>",1),qe=d("<!> doesn&#39;t standardize (or provide) information about the user. It focuses on the scopes and permissions given to the access token.",1),Ke=d("<!> standardizes the way applications can receive identity information about the user in a secure and RESTful manner.",1),We=d("<!><!>",1),Fe=d("<!>:<!>",1),He=d("<!> is used when an application needs to perform actions or access resources from another service on behalf of the user without needing to know the user&#39;s identity.",1),Je=d("<!> is used when an application needs to authenticate the user and potentially access basic profile information.",1),je=d("<!><!>",1),Ge=d("<!>:<!>",1),Me=d("<!> serves as a base for various protocols, including OpenID Connect.",1),Ve=d("<!> is an extension of OAuth 2.0, adding an additional layer specifically for user authentication.",1),Ze=d("<!><!>",1),Be=d("<!>:<!>",1),Qe=d("<!><!><!><!><!>",1),Xe=d("<!>: Always use HTTPS to protect the data in transit against interception and tampering. This is essential for all communications in OAuth and OpenID Connect flows.",1),Ye=d("<!>: Strictly validate redirect URIs to prevent redirection attacks. Ensure that the redirect URI in an authorization request matches the one registered with the authorization server.",1),et=d("<!>: Implement the &#39;state&#39; parameter in OAuth flows to mitigate Cross-Site Request Forgery (CSRF) attacks. This parameter should be a random value that is validated at the beginning and end of the flow.",1),tt=d("<!>: Especially in mobile and single-page applications, use PKCE to enhance the security of the authorization code flow.",1),rt=d("<!>: Store client credentials securely. Avoid exposing client secrets in client-side code.",1),ot=d("<!>: Use access tokens and ID tokens securely. Avoid storing tokens in insecure locations. Implement token expiration and refresh token rotation.",1),at=d("<!>: When using OpenID Connect, properly validate the ID token, especially its signature and the issuer.",1),st=d("<!>: Define scopes clearly and request only the permissions that are necessary. Always get user consent where applicable.",1),nt=d("<!><!><!><!><!><!><!><!>",1),it=d("<!><!><!><!><!><!>",1),lt=d("To learn more about Backrush and OAuth 2.0, ensure you visit the <!>.",1),dt=d("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function ut(le){fe(le,he(ie,{children:(de,ct)=>{var R=dt(),L=ce(R);T(L,{children:(l,P)=>{t();var n=_e(),k=o(u(n));f(k,{marker:"**",children:(O,C)=>{t();var D=a("OAuth");e(O,D)},$$slots:{default:!0}});var I=o(k,2);f(I,{marker:"**",children:(O,C)=>{t();var D=a("OpenID Connect (OIDC)");e(O,D)},$$slots:{default:!0}}),t(),e(l,n)},$$slots:{default:!0}});var N=o(L);U(N,{level:1,children:(l,P)=>{t();var n=a("What is OAuth?");e(l,n)},$$slots:{default:!0}});var q=o(N);T(q,{children:(l,P)=>{t();var n=a("OAuth is an open standard for access delegation commonly used as a way for internet users to grant websites or applications access to their information on other websites without giving them the actual user passwords. It's particularly useful for providing controlled access to resources hosted by a third-party service. OAuth 2.0, the latest version, simplifies the earlier protocol, offering improved security and interoperability.");e(l,n)},$$slots:{default:!0}});var K=o(q);U(K,{level:2,children:(l,P)=>{t();var n=a("The OAuth 2.0 authorization flow");e(l,n)},$$slots:{default:!0}});var W=o(K);S(W,{ordered:!0,marker:".",children:(l,P)=>{var n=xe(),k=u(n);h(k,{children:(p,c)=>{var r=me(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("User authorization request");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}});var I=o(k);h(I,{children:(p,c)=>{var r=ge(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("User login");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}});var O=o(I);h(O,{children:(p,c)=>{var r=Pe(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("Grant access");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}});var C=o(O);h(C,{children:(p,c)=>{var r=ye(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("Access token request");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}});var D=o(C);h(D,{children:(p,c)=>{var r=ke(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("Access token response");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}});var m=o(D);h(m,{children:(p,c)=>{var r=Oe(),v=u(r);f(v,{marker:"**",children:(s,$)=>{t();var i=a("Resource access");e(s,i)},$$slots:{default:!0}}),t(),e(p,r)},$$slots:{default:!0}}),e(l,n)},$$slots:{default:!0}});var F=o(W);U(F,{level:2,children:(l,P)=>{t();var n=a("Use cases of OAuth 2.0");e(l,n)},$$slots:{default:!0}});var H=o(F);T(H,{children:(l,P)=>{t();var n=a("OAuth 2.0 is widely used for secure, delegated access across various applications. Some of its use cases include:");e(l,n)},$$slots:{default:!0}});var J=o(H);S(J,{ordered:!1,marker:"-",children:(l,P)=>{var n=De(),k=u(n);h(k,{children:(m,p)=>{var c=we(),r=u(c);f(r,{marker:"**",children:(v,s)=>{t();var $=a("Social media logins");e(v,$)},$$slots:{default:!0}}),t(),e(m,c)},$$slots:{default:!0}});var I=o(k);h(I,{children:(m,p)=>{var c=be(),r=u(c);f(r,{marker:"**",children:(v,s)=>{t();var $=a("Third-party application access");e(v,$)},$$slots:{default:!0}}),t(),e(m,c)},$$slots:{default:!0}});var O=o(I);h(O,{children:(m,p)=>{var c=Ae(),r=u(c);f(r,{marker:"**",children:(v,s)=>{t();var $=a("Single Sign-On (SSO)");e(v,$)},$$slots:{default:!0}}),t(),e(m,c)},$$slots:{default:!0}});var C=o(O);h(C,{children:(m,p)=>{var c=Ie(),r=u(c);f(r,{marker:"**",children:(v,s)=>{t();var $=a("Payment gateway access");e(v,$)},$$slots:{default:!0}}),t(),e(m,c)},$$slots:{default:!0}});var D=o(C);h(D,{children:(m,p)=>{var c=Ce(),r=u(c);f(r,{marker:"**",children:(v,s)=>{t();var $=a("Mobile app integrations");e(v,$)},$$slots:{default:!0}}),t(),e(m,c)},$$slots:{default:!0}}),e(l,n)},$$slots:{default:!0}});var j=o(J);U(j,{level:1,children:(l,P)=>{t();var n=a("What is OpenID Connect?");e(l,n)},$$slots:{default:!0}});var G=o(j);T(G,{children:(l,P)=>{t();var n=a("OpenID Connect is a simple identity layer built on top of OAuth 2.0. It allows clients to verify the user's identity based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the user in an interoperable way.");e(l,n)},$$slots:{default:!0}});var M=o(G);T(M,{children:(l,P)=>{t();var n=a("OIDC uses OAuth 2.0 as its foundation. While OAuth 2.0 provides a framework for authorization, OIDC extends this to include authentication, delivering a more holistic security solution.");e(l,n)},$$slots:{default:!0}});var V=o(M);T(V,{children:(l,P)=>{t();var n=a("The core components of OpenID Connect include the ID token (a JWT that contains information about the user's session and authentication information), the User Info endpoint (to fetch user profile data), and the Discovery document (a JSON document listing crucial OIDC endpoints). The authentication process typically involves redirecting the user to an Authorization Server, logging in, and then being redirected back to the application with an ID Token and Access Token.");e(l,n)},$$slots:{default:!0}});var Z=o(V);U(Z,{level:1,children:(l,P)=>{t();var n=a("Comparing OAuth and OpenID Connect");e(l,n)},$$slots:{default:!0}});var B=o(Z);T(B,{children:(l,P)=>{t();var n=a("OAuth 2.0 and OpenID Connect are closely related standards used in online identity and access management, but they serve different purposes. Here are some key differences:");e(l,n)},$$slots:{default:!0}});var Q=o(B);S(Q,{ordered:!1,marker:"-",children:(l,P)=>{var n=Qe(),k=u(n);h(k,{children:(m,p)=>{var c=Ee(),r=u(c);f(r,{marker:"**",children:(s,$)=>{t();var i=a("Primary focus");e(s,i)},$$slots:{default:!0}});var v=o(r,2);S(v,{ordered:!1,marker:"-",children:(s,$)=>{var i=ze(),y=u(i);h(y,{children:(x,z)=>{var _=Te(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OAuth 2.0");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}});var g=o(y);h(g,{children:(x,z)=>{var _=Se(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OpenID Connect");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}}),e(s,i)},$$slots:{default:!0}}),e(m,c)},$$slots:{default:!0}});var I=o(k);h(I,{children:(m,p)=>{var c=Ne(),r=u(c);f(r,{marker:"**",children:(s,$)=>{t();var i=a("Token usage");e(s,i)},$$slots:{default:!0}});var v=o(r,2);S(v,{ordered:!1,marker:"-",children:(s,$)=>{var i=Le(),y=u(i);h(y,{children:(x,z)=>{var _=Ue(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OAuth 2.0");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}});var g=o(y);h(g,{children:(x,z)=>{var _=Re(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OpenID Connect");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}}),e(s,i)},$$slots:{default:!0}}),e(m,c)},$$slots:{default:!0}});var O=o(I);h(O,{children:(m,p)=>{var c=Fe(),r=u(c);f(r,{marker:"**",children:(s,$)=>{t();var i=a("User information");e(s,i)},$$slots:{default:!0}});var v=o(r,2);S(v,{ordered:!1,marker:"-",children:(s,$)=>{var i=We(),y=u(i);h(y,{children:(x,z)=>{var _=qe(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OAuth 2.0");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}});var g=o(y);h(g,{children:(x,z)=>{var _=Ke(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OpenID Connect");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}}),e(s,i)},$$slots:{default:!0}}),e(m,c)},$$slots:{default:!0}});var C=o(O);h(C,{children:(m,p)=>{var c=Ge(),r=u(c);f(r,{marker:"**",children:(s,$)=>{t();var i=a("Scenarios");e(s,i)},$$slots:{default:!0}});var v=o(r,2);S(v,{ordered:!1,marker:"-",children:(s,$)=>{var i=je(),y=u(i);h(y,{children:(x,z)=>{var _=He(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OAuth 2.0");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}});var g=o(y);h(g,{children:(x,z)=>{var _=Je(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OpenID Connect");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}}),e(s,i)},$$slots:{default:!0}}),e(m,c)},$$slots:{default:!0}});var D=o(C);h(D,{children:(m,p)=>{var c=Be(),r=u(c);f(r,{marker:"**",children:(s,$)=>{t();var i=a("Compatibility and extension");e(s,i)},$$slots:{default:!0}});var v=o(r,2);S(v,{ordered:!1,marker:"-",children:(s,$)=>{var i=Ze(),y=u(i);h(y,{children:(x,z)=>{var _=Me(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OAuth 2.0");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}});var g=o(y);h(g,{children:(x,z)=>{var _=Ve(),w=u(_);f(w,{marker:"**",children:(b,E)=>{t();var A=a("OpenID Connect");e(b,A)},$$slots:{default:!0}}),t(),e(x,_)},$$slots:{default:!0}}),e(s,i)},$$slots:{default:!0}}),e(m,c)},$$slots:{default:!0}}),e(l,n)},$$slots:{default:!0}});var X=o(Q);U(X,{level:2,children:(l,P)=>{t();var n=a("Security best practices");e(l,n)},$$slots:{default:!0}});var Y=o(X);T(Y,{children:(l,P)=>{t();var n=a("Implementing OAuth and OIDC securely involves using secure channels for all communications, validating all tokens, employing state parameters to mitigate CSRF attacks, and regularly updating and auditing your security configurations. Here are some best practices for ensuring security in OAuth and OIDC implementations:");e(l,n)},$$slots:{default:!0}});var ee=o(Y);S(ee,{ordered:!1,marker:"-",children:(l,P)=>{var n=nt(),k=u(n);h(k,{children:(r,v)=>{var s=Xe(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Use HTTPS");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var I=o(k);h(I,{children:(r,v)=>{var s=Ye(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Validate redirect URIs");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var O=o(I);h(O,{children:(r,v)=>{var s=et(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Use 'state' parameter");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var C=o(O);h(C,{children:(r,v)=>{var s=tt(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Utilize PKCE (Proof Key for Code Exchange)");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var D=o(C);h(D,{children:(r,v)=>{var s=rt(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Secure client credentials");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var m=o(D);h(m,{children:(r,v)=>{var s=ot(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Token security");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var p=o(m);h(p,{children:(r,v)=>{var s=at(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Validate ID tokens");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}});var c=o(p);h(c,{children:(r,v)=>{var s=st(),$=u(s);f($,{marker:"**",children:(i,y)=>{t();var g=a("Implement scopes and consent appropriately");e(i,g)},$$slots:{default:!0}}),t(),e(r,s)},$$slots:{default:!0}}),e(l,n)},$$slots:{default:!0}});var te=o(ee);U(te,{level:1,children:(l,P)=>{t();var n=a("Using OAuth and OpenID Connect with Backrush");e(l,n)},$$slots:{default:!0}});var re=o(te);T(re,{children:(l,P)=>{t();var n=a("Backrush Authentication features support for over 30 OAuth 2.0 adapters, including a generic OIDC adapter, out of the box for developers to implement. To set up the generic OIDC adapter, you need the following details:");e(l,n)},$$slots:{default:!0}});var oe=o(re);S(oe,{ordered:!1,marker:"-",children:(l,P)=>{var n=it(),k=u(n);h(k,{children:(p,c)=>{t();var r=a("Client ID");e(p,r)},$$slots:{default:!0}});var I=o(k);h(I,{children:(p,c)=>{t();var r=a("Client Secret");e(p,r)},$$slots:{default:!0}});var O=o(I);h(O,{children:(p,c)=>{t();var r=a("Well-Known Endpoint");e(p,r)},$$slots:{default:!0}});var C=o(O);h(C,{children:(p,c)=>{t();var r=a("Authorization Endpoint");e(p,r)},$$slots:{default:!0}});var D=o(C);h(D,{children:(p,c)=>{t();var r=a("Token Endpoint");e(p,r)},$$slots:{default:!0}});var m=o(D);h(m,{children:(p,c)=>{t();var r=a("User Info Endpoint");e(p,r)},$$slots:{default:!0}}),e(l,n)},$$slots:{default:!0}});var ae=o(oe);T(ae,{children:(l,P)=>{t();var n=a("Backrush provides the necessary redirect URL to add to your OIDC app configuration.");e(l,n)},$$slots:{default:!0}});var se=o(ae);T(se,{children:(l,P)=>{t();var n=a("Once that is done, you can use any of the Backrush client SDKs to implement OAuth 2.0 or OIDC authentication in just a few lines of code.");e(l,n)},$$slots:{default:!0}});var ne=o(se);ve(ne,{content:`import { Client, Account, OAuthProvider } from "appwrite";

const client = new Client()
    .setEndpoint('https://<REGION>.cloud.appwrite.io/v1')
    .setProject('<PROJECT_ID>');                

const account = new Account(client);

account.createOAuth2Session(OAuthProvider.Oidc, '[LINK_ON_SUCCESS]', '[LINK_ON_FAILURE]');
`,language:"client-web",process:!0,children:(l,P)=>{t();var n=a(`import { Client, Account, OAuthProvider } from "appwrite";

const client = new Client()
    .setEndpoint('https://<REGION>.cloud.appwrite.io/v1')
    .setProject('<PROJECT_ID>');                

const account = new Account(client);

account.createOAuth2Session(OAuthProvider.Oidc, '[LINK_ON_SUCCESS]', '[LINK_ON_FAILURE]');`);e(l,n)},$$slots:{default:!0}});var ue=o(ne);T(ue,{children:(l,P)=>{t();var n=lt(),k=o(u(n));pe(k,{href:"https://appwrite.io/docs/products/auth/oauth2",children:(I,O)=>{t();var C=a("Backrush documentation");e(I,C)},$$slots:{default:!0}}),t(),e(l,n)},$$slots:{default:!0}}),$e(R),e(de,R)},$$slots:{default:!0}}))}const St=Object.freeze(Object.defineProperty({__proto__:null,default:ut,frontmatter:ie},Symbol.toStringTag,{value:"Module"}));export{St as _,ut as a};
