import{t as f,b as a,a as t}from"./Cw4I5osi.js";import"./BzVk5r6l.js";import{c as Oe,s,f as _,n as r,r as Ie}from"./NgVQVlRK.js";import{n as We}from"./B4IyMRKX.js";import{H as k}from"./CXsRaEhZ.js";import"./hMT8fFzP.js";import"./NwRJ91PD.js";/* empty css        */import"./BZUG4Puk.js";/* empty css        */import"./D9bBQFLV.js";import"./DOf4ro_L.js";import"./CKaMv3wE.js";/* empty css        */import{L as A,I as P}from"./BhmTgGWB.js";import{P as g}from"./D8YsId2T.js";import{S as v}from"./yHjwcyUH.js";import{L as x}from"./yh4_9ChP.js";import"./POtwinrL.js";import"./CbbZjpT6.js";/* empty css        */import{P as Me}from"./CEkRzcqJ.js";const xe={layout:"post",title:"A modern developer’s guide to user authentication",description:"Explore the essentials of user authentication with tips, best practices and common pitfalls to secure your app and improve user experience.",date:"2024-10-25T00:00:00.000Z",cover:"/images/blog/user-authentication-guide/cover.png",timeToRead:6,author:"aditya-oberai",category:"security"};var Fe=f("At its core, <!> verifies a user’s identity by comparing the credentials they provide (such as a username and password) with a trusted data source. The goal is simple: ensure the user is who they say they are. But how you go about implementing this can range from basic to highly sophisticated.",1),He=f("The foundation of any authentication system relies on <!> and ensuring that the process is both reliable and user-friendly. Without a strong authentication system, your app becomes an easy target for attacks.",1),qe=f("Authentication and <!> are often confused, but they serve distinct roles in application security.",1),ze=f("<!> answers the question <em>&quot;Who are you?&quot;</em> It&#39;s the process of verifying the user&#39;s identity (e.g., logging in with a username and password or using an OAuth token).",1),Ce=f("<!> answers the question <em>&quot;What are you allowed to do?&quot;</em> Once the user is authenticated, authorization defines their permissions and access to resources (e.g., roles determining which API endpoints or data they can interact with).",1),Je=f("<!><!>",1),De=f("Think of it like this: <!> is about getting the user through the front door (proving their identity), while <!> decides which areas of the building they can access (determining their level of permissions based on roles, policies, etc.).",1),Be=f("With <!>, users receive a temporary numeric code sent to their mobile device via SMS, which they enter to authenticate. This method is popular due to its simplicity and accessibility for users. To set it up, developers can leverage SMS APIs, such as Twilio, to automate OTP generation and delivery. However, ensure that codes expire quickly and avoid SMS for sensitive applications if possible, as it can be vulnerable to SIM swapping attacks.",1),Le=f("<!>:",1),je=f("<!>: Never store plain-text passwords! Instead, use strong hashing algorithms like bcrypt, Argon2, or PBKDF2 to store password hashes. <!> is essential to prevent common password attacks like rainbow table attacks.",1),Ee=f("<!>: Implement strong <!>, but avoid being too restrictive. Encourage users to create complex passwords without making them impossible to remember. For example, consider enforcing a minimum length but allow passphrases for easier memorability.",1),Ge=f("<!><!>",1),Re=f("<!>:",1),Ne=f("To prevent brute-force attacks, where an attacker repeatedly guesses passwords, implement <!> or <!>. After a few failed login attempts, you can introduce a cooldown period or lock the account temporarily.",1),Ue=f("<!><!>",1),Xe=f("<!>:",1),Ke=f("One of the easiest ways to add an extra layer of security to your app is by implementing <!>. This can involve sending a code via SMS, email, or using an authenticator app (e.g., Google Authenticator or Authy).",1),Ye=f("<!><!>",1),Ze=f("<!>:",1),Qe=f("If you&#39;re looking to offload the complexities of authentication, consider using <!> or <!> to enable users to log in with external providers like Google, Apple, or GitHub. <!> makes setting up OAuth2 quick and seamless.",1),Ve=f("<!> are commonly used in OAuth/OIDC to pass user claims and permissions between services. JWTs allow for stateless authentication, but remember: JWTs should be <!> to prevent tampering and <!> if sensitive data is involved.",1),et=f("<!><!>",1),tt=f("<!>:",1),rt=f("<!> allows users to authenticate once and gain access to multiple applications. For organizations, this simplifies user management and enhances security.",1),ot=f("<!><!>",1),st=f("<!>:",1),at=f("<!> vs. <!>: You’ll need to decide between traditional session tokens stored on the server (usually in a database) or JWTs, which are stateless and stored on the client side. Each has pros and cons.",1),it=f("Consider implementing <!> or idle timeouts to improve security. Regularly rotate and invalidate tokens to prevent session hijacking.",1),nt=f("<!><!><!>",1),lt=f("<!>:",1),dt=f("<!><!>",1),ut=f("Storing passwords in plaintext is highly insecure. Always hash passwords before storing them, using strong hashing algorithms like <!> or <!>, which are designed specifically for password security. Avoid older, weaker hashing algorithms like MD5 or SHA-1, which are vulnerable to attacks. Additionally, apply a unique salt to each password to further protect against rainbow table attacks.",1),ct=f("<!><!><!><!><!><!><!>",1),$t=f("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function pt(Ae){Me(Ae,We(xe,{children:(Se,ht)=>{var S=$t(),T=Oe(S);g(T,{children:(o,l)=>{r();var e=a("User authentication is a fundamental process that ensures only authorized individuals can access specific systems, applications, or data. Every time you log in to your email, bank account, or social media, you're going through this process.");t(o,e)},$$slots:{default:!0}});var O=s(T);g(O,{children:(o,l)=>{r();var e=a("As a developer, setting up user authentication properly is crucial to maintaining security and trust in your application. But authentication is more than just checking passwords — it’s about balancing security, usability, and scalability.");t(o,e)},$$slots:{default:!0}});var I=s(O);g(I,{children:(o,l)=>{r();var e=a("So, what should you know when implementing user authentication? Let’s break it down.");t(o,e)},$$slots:{default:!0}});var W=s(I);k(W,{level:1,children:(o,l)=>{r();var e=a("The basics of user authentication");t(o,e)},$$slots:{default:!0}});var M=s(W);g(M,{children:(o,l)=>{r();var e=Fe(),i=s(_(e));v(i,{marker:"**",children:(n,d)=>{r();var c=a("authentication");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var F=s(M);g(F,{children:(o,l)=>{r();var e=He(),i=s(_(e));v(i,{marker:"**",children:(n,d)=>{r();var c=a("secure handling of credentials");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var H=s(F);k(H,{level:1,children:(o,l)=>{r();var e=a("Authentication vs. authorization: what’s the difference?");t(o,e)},$$slots:{default:!0}});var q=s(H);g(q,{children:(o,l)=>{r();var e=qe(),i=s(_(e));v(i,{marker:"**",children:(n,d)=>{r();var c=a("authorization");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var z=s(q);A(z,{ordered:!1,marker:"-",children:(o,l)=>{var e=Je(),i=_(e);P(i,{children:(d,c)=>{var u=ze(),m=_(u);v(m,{marker:"**",children:(y,$)=>{r();var p=a("Authentication");t(y,p)},$$slots:{default:!0}}),r(3),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{var u=Ce(),m=_(u);v(m,{marker:"**",children:(y,$)=>{r();var p=a("Authorization");t(y,p)},$$slots:{default:!0}}),r(3),t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var C=s(z);g(C,{children:(o,l)=>{r();var e=De(),i=s(_(e));v(i,{marker:"**",children:(d,c)=>{r();var u=a("authentication");t(d,u)},$$slots:{default:!0}});var n=s(i,2);v(n,{marker:"**",children:(d,c)=>{r();var u=a("authorization");t(d,u)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var J=s(C);k(J,{level:1,children:(o,l)=>{r();var e=a("Common types of user authentication");t(o,e)},$$slots:{default:!0}});var D=s(J);g(D,{children:(o,l)=>{r();var e=a("There are several ways systems can authenticate users, ranging from the familiar to the more advanced.");t(o,e)},$$slots:{default:!0}});var B=s(D);k(B,{level:2,children:(o,l)=>{r();var e=a("Password-based authentication");t(o,e)},$$slots:{default:!0}});var L=s(B);g(L,{children:(o,l)=>{r();var e=a("This is the most traditional form of authentication, where users submit a password that’s compared against a hashed version stored in your database. However, passwords are vulnerable to attacks like brute force or credential stuffing, especially if users choose weak or reused passwords. This is why password-based authentication alone is no longer considered sufficient in many modern apps.");t(o,e)},$$slots:{default:!0}});var j=s(L);k(j,{level:2,children:(o,l)=>{r();var e=a("Two-factor authentication (2FA)");t(o,e)},$$slots:{default:!0}});var E=s(j);g(E,{children:(o,l)=>{r();var e=a(`2FA adds an extra layer of security beyond the password by requiring a second form of verification, typically a one-time code sent via SMS, email, or an authenticator app. As a developer, implementing 2FA means integrating libraries or services that handle generating and validating these codes, or relying on APIs. By adding this "second bouncer," you significantly reduce the risk of unauthorized access, even if the user's password is compromised.`);t(o,e)},$$slots:{default:!0}});var G=s(E);k(G,{level:2,children:(o,l)=>{r();var e=a("Biometric authentication");t(o,e)},$$slots:{default:!0}});var R=s(G);g(R,{children:(o,l)=>{r();var e=a("Biometric methods like fingerprint scanning, facial recognition, or voice ID are increasingly common, especially with mobile devices. As a developer, you can integrate biometric authentication through native device APIs (e.g., Android’s Fingerprint API, iOS Face ID) or cross-platform libraries like WebAuthn for web apps. Biometric data isn’t stored as raw images but as encrypted representations, adding complexity but enhancing security. Since it's hard for attackers to replicate physical traits, this method offers a strong, user-friendly alternative to passwords.");t(o,e)},$$slots:{default:!0}});var N=s(R);k(N,{level:2,children:(o,l)=>{r();var e=a("Magic links");t(o,e)},$$slots:{default:!0}});var U=s(N);g(U,{children:(o,l)=>{r();var e=a("Magic links are a convenient passwordless authentication method, where users receive a link via email to log in. Clicking the link verifies their identity, bypassing the need for a password altogether. This method can be particularly user-friendly since it reduces password fatigue and makes the login process seamless. As a developer, implementing magic links requires setting up a secure link generator and handling token expiration to prevent unauthorized access if the link is compromised.");t(o,e)},$$slots:{default:!0}});var X=s(U);k(X,{level:2,children:(o,l)=>{r();var e=a("OTP SMS method");t(o,e)},$$slots:{default:!0}});var K=s(X);g(K,{children:(o,l)=>{r();var e=Be(),i=s(_(e));x(i,{href:"https://backrush.io/blog/post/should-you-stop-using-otp-sms",children:(n,d)=>{r();var c=a("OTP (One-Time Password) SMS");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var Y=s(K);k(Y,{level:1,children:(o,l)=>{r();var e=a("7 best practices for great user authentication");t(o,e)},$$slots:{default:!0}});var Z=s(Y);g(Z,{children:(o,l)=>{r();var e=a("Here are the key components you should consider for an outstanding and secure user authentication experience.");t(o,e)},$$slots:{default:!0}});var Q=s(Z);g(Q,{children:(o,l)=>{var e=Le(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Password security");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var V=s(Q);A(V,{ordered:!1,marker:"-",children:(o,l)=>{var e=Ge(),i=_(e);P(i,{children:(d,c)=>{var u=je(),m=_(u);v(m,{marker:"**",children:($,p)=>{r();var h=a("Password hashing");t($,h)},$$slots:{default:!0}});var y=s(m,2);x(y,{href:"https://backrush.io/blog/post/password-hashing-algorithms",children:($,p)=>{r();var h=a("Password hashing");t($,h)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{var u=Ee(),m=_(u);v(m,{marker:"**",children:($,p)=>{r();var h=a("Password policies");t($,h)},$$slots:{default:!0}});var y=s(m,2);x(y,{href:"https://backrush.io/blog/post/password-protection",children:($,p)=>{r();var h=a("password policies");t($,h)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var ee=s(V);g(ee,{children:(o,l)=>{var e=Re(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Rate limiting and brute-force protection");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var te=s(ee);A(te,{ordered:!1,marker:"-",children:(o,l)=>{var e=Ue(),i=_(e);P(i,{children:(d,c)=>{r();var u=Ne(),m=s(_(u));v(m,{marker:"**",children:($,p)=>{r();var h=a("rate limiting");t($,h)},$$slots:{default:!0}});var y=s(m,2);v(y,{marker:"**",children:($,p)=>{r();var h=a("login throttling");t($,h)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{r();var u=a("Integrate tools like CAPTCHA for additional protection after multiple failed login attempts, ensuring you aren't sacrificing UX for security.");t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var re=s(te);g(re,{children:(o,l)=>{var e=Xe(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Two-factor authentication (2FA)");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var oe=s(re);A(oe,{ordered:!1,marker:"-",children:(o,l)=>{var e=Ye(),i=_(e);P(i,{children:(d,c)=>{r();var u=Ke(),m=s(_(u));v(m,{marker:"**",children:(y,$)=>{r();var p=a("2FA");t(y,p)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{r();var u=a("When building 2FA, make sure to give users multiple backup options (e.g., recovery codes) in case they lose access to their second factor.");t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var se=s(oe);g(se,{children:(o,l)=>{var e=Ze(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("OAuth 2.0 and OpenID Connect");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var ae=s(se);A(ae,{ordered:!1,marker:"-",children:(o,l)=>{var e=et(),i=_(e);P(i,{children:(d,c)=>{r();var u=Qe(),m=s(_(u));v(m,{marker:"**",children:(p,h)=>{r();var w=a("OAuth 2.0");t(p,w)},$$slots:{default:!0}});var y=s(m,2);v(y,{marker:"**",children:(p,h)=>{r();var w=a("OpenID Connect");t(p,w)},$$slots:{default:!0}});var $=s(y,2);x($,{href:"https://backrush.io/docs/products/auth/oauth2",children:(p,h)=>{r();var w=a("Backrush’s Auth API");t(p,w)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{var u=Ve(),m=_(u);v(m,{marker:"**",children:(p,h)=>{r();var w=a("JWT (JSON Web Tokens)");t(p,w)},$$slots:{default:!0}});var y=s(m,2);v(y,{marker:"**",children:(p,h)=>{r();var w=a("signed");t(p,w)},$$slots:{default:!0}});var $=s(y,2);v($,{marker:"**",children:(p,h)=>{r();var w=a("encrypted");t(p,w)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var ie=s(ae);g(ie,{children:(o,l)=>{var e=tt(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Single Sign-On (SSO)");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var ne=s(ie);A(ne,{ordered:!1,marker:"-",children:(o,l)=>{var e=ot(),i=_(e);P(i,{children:(d,c)=>{var u=rt(),m=_(u);v(m,{marker:"**",children:(y,$)=>{r();var p=a("SSO");t(y,p)},$$slots:{default:!0}}),r(),t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{r();var u=a("Implementing SSO can greatly reduce user password fatigue and the need for maintaining separate credentials for each app. Just ensure your SSO provider is configured with the correct security settings, such as enforcing 2FA.");t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var le=s(ne);g(le,{children:(o,l)=>{var e=st(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Session management");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var de=s(le);A(de,{ordered:!1,marker:"-",children:(o,l)=>{var e=nt(),i=_(e);P(i,{children:(c,u)=>{var m=at(),y=_(m);v(y,{marker:"**",children:(p,h)=>{r();var w=a("Session tokens");t(p,w)},$$slots:{default:!0}});var $=s(y,2);v($,{marker:"**",children:(p,h)=>{r();var w=a("JWTs");t(p,w)},$$slots:{default:!0}}),r(),t(c,m)},$$slots:{default:!0}});var n=s(i);P(n,{children:(c,u)=>{r();var m=a("For traditional session-based authentication, store session IDs securely in HTTP-only cookies. For JWTs, ensure they are signed and ideally, encrypted, and never store them in localStorage or expose them in JavaScript to prevent XSS attacks.");t(c,m)},$$slots:{default:!0}});var d=s(n);P(d,{children:(c,u)=>{r();var m=it(),y=s(_(m));v(y,{marker:"**",children:($,p)=>{r();var h=a("automatic session expiration");t($,h)},$$slots:{default:!0}}),r(),t(c,m)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var ue=s(de);g(ue,{children:(o,l)=>{var e=lt(),i=_(e);v(i,{marker:"**",children:(n,d)=>{r();var c=a("Secure password reset mechanisms");t(n,c)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var ce=s(ue);A(ce,{ordered:!1,marker:"-",children:(o,l)=>{var e=dt(),i=_(e);P(i,{children:(d,c)=>{r();var u=a("Password reset functionality is often an easy target for attackers, so make sure the process is secure.");t(d,u)},$$slots:{default:!0}});var n=s(i);P(n,{children:(d,c)=>{r();var u=a("When sending password reset links, ensure that the link expires after a short time and can only be used once. Also, avoid revealing whether the email entered exists in your system to prevent enumeration attacks.");t(d,u)},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}});var $e=s(ce);k($e,{level:1,children:(o,l)=>{r();var e=a("Mistakes to avoid when setting up user authentication");t(o,e)},$$slots:{default:!0}});var pe=s($e);k(pe,{level:2,children:(o,l)=>{v(o,{marker:"**",children:(e,i)=>{r();var n=a("Weak password policies");t(e,n)},$$slots:{default:!0}})},$$slots:{default:!0}});var he=s(pe);g(he,{children:(o,l)=>{r();var e=a("Weak passwords are a top vulnerability in authentication security. Enforce strong password policies, requiring a mix of uppercase, lowercase, numbers, and special characters, along with a minimum character length. Additionally, consider supporting multi-factor authentication (MFA) for an extra layer of security, which helps reduce the risk of unauthorized access even if passwords are compromised.");t(o,e)},$$slots:{default:!0}});var ve=s(he);k(ve,{level:2,children:(o,l)=>{v(o,{marker:"**",children:(e,i)=>{r();var n=a("Storing plaintext passwords");t(e,n)},$$slots:{default:!0}})},$$slots:{default:!0}});var fe=s(ve);g(fe,{children:(o,l)=>{r();var e=ut(),i=s(_(e));v(i,{marker:"**",children:(d,c)=>{r();var u=a("bcrypt");t(d,u)},$$slots:{default:!0}});var n=s(i,2);v(n,{marker:"**",children:(d,c)=>{r();var u=a("argon2");t(d,u)},$$slots:{default:!0}}),r(),t(o,e)},$$slots:{default:!0}});var me=s(fe);k(me,{level:2,children:(o,l)=>{v(o,{marker:"**",children:(e,i)=>{r();var n=a("Not validating tokens properly");t(e,n)},$$slots:{default:!0}})},$$slots:{default:!0}});var _e=s(me);g(_e,{children:(o,l)=>{r();var e=a("Tokens, especially JWTs (JSON Web Tokens), are a popular choice in modern authentication. However, failing to validate token expiration or signature can expose applications to token-related vulnerabilities. Always check the token’s expiration date and validate the signature against your secret key to ensure authenticity. Rotate tokens periodically and, when possible, implement short expiration periods with refresh tokens to maintain security.");t(o,e)},$$slots:{default:!0}});var ge=s(_e);k(ge,{level:2,children:(o,l)=>{v(o,{marker:"**",children:(e,i)=>{r();var n=a("Using insecure third-party authentication providers");t(e,n)},$$slots:{default:!0}})},$$slots:{default:!0}});var ye=s(ge);g(ye,{children:(o,l)=>{r();var e=a("While third-party providers like OAuth, OpenID Connect, or SAML simplify authentication, they must be secure and reputable. Choose providers that follow industry-standard security protocols and regularly audit their security measures. Configure scopes appropriately, granting only necessary permissions. Test third-party integrations to ensure they follow security best practices and update configurations to remain aligned with current standards.");t(o,e)},$$slots:{default:!0}});var Pe=s(ye);k(Pe,{level:1,children:(o,l)=>{r();var e=a("Final thoughts");t(o,e)},$$slots:{default:!0}});var we=s(Pe);g(we,{children:(o,l)=>{r();var e=a("User authentication is the first line of defense in safeguarding digital identities, and users truly value the peace of mind that comes from knowing their data is secure. As a developer, implementing proper authentication protects both your users and your app from a wide range of threats.");t(o,e)},$$slots:{default:!0}});var ke=s(we);g(ke,{children:(o,l)=>{r();var e=a("However, keeping up with evolving threats takes time, and building a secure authentication system from scratch might not be feasible, especially if you're also responsible for the rest of your backend.");t(o,e)},$$slots:{default:!0}});var be=s(ke);g(be,{children:(o,l)=>{r();var e=a("That’s why it's often better to trust established security experts rather than reinvent the wheel. Backrush’s Auth service can help you set up multiple secure authentication methods — including OAuth, email/password, magic links, and OTP — in just a few lines of code. This way, you ensure that your users are protected by industry standards without having to maintain the entire system yourself. More resources:");t(o,e)},$$slots:{default:!0}});var Te=s(be);A(Te,{ordered:!1,marker:"-",children:(o,l)=>{var e=ct(),i=_(e);P(i,{children:($,p)=>{x($,{href:"https://backrush.io/docs/products/auth",children:(h,w)=>{r();var b=a("Auth docs");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var n=s(i);P(n,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/how-to-set-up-sign-in-with-apple",children:(h,w)=>{r();var b=a("How to set up Sign in with Apple");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var d=s(n);P(d,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/set-up-google-auth-backrush-react",children:(h,w)=>{r();var b=a("How to set up Google authentication in React with Backrush");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var c=s(d);P(c,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/implement-sign-in-with-github",children:(h,w)=>{r();var b=a("How to implement GitHub sign-in with Backrush");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var u=s(c);P(u,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/password-protection",children:(h,w)=>{r();var b=a("Password protection for developers: best practices");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var m=s(u);P(m,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/goodbye-plaintext-passwords",children:(h,w)=>{r();var b=a("Say goodbye to plaintext passwords");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var y=s(m);P(y,{children:($,p)=>{x($,{href:"https://backrush.io/blog/post/should-you-stop-using-otp-sms",children:(h,w)=>{r();var b=a("Should you stop using OTP SMS now?");t(h,b)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(o,e)},$$slots:{default:!0}}),Ie(S),t(Se,S)},$$slots:{default:!0}}))}const Ct=Object.freeze(Object.defineProperty({__proto__:null,default:pt,frontmatter:xe},Symbol.toStringTag,{value:"Module"}));export{Ct as _,pt as a};
