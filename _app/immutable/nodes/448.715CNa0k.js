import{t as v,b as s,a as r}from"../chunks/Cw4I5osi.js";import"../chunks/BzVk5r6l.js";import{c as Y,s as a,f as m,n as o,r as Z}from"../chunks/NgVQVlRK.js";import{n as ee}from"../chunks/B4IyMRKX.js";import{H as _}from"../chunks/CXsRaEhZ.js";import"../chunks/hMT8fFzP.js";import"../chunks/NwRJ91PD.js";/* empty css                */import"../chunks/BZUG4Puk.js";/* empty css                */import"../chunks/D9bBQFLV.js";import{C as A}from"../chunks/DXp9_3zM.js";import"../chunks/DOf4ro_L.js";import"../chunks/CKaMv3wE.js";/* empty css                */import{L as x,I as p}from"../chunks/BhmTgGWB.js";import{P as h}from"../chunks/D8YsId2T.js";import{S as b}from"../chunks/yHjwcyUH.js";import{L as y}from"../chunks/yh4_9ChP.js";import"../chunks/POtwinrL.js";import"../chunks/CbbZjpT6.js";/* empty css                */import{A as te}from"../chunks/CqOphJLh.js";const re={layout:"article",title:"Identities",description:"Handle multiple authentication methods per user through a unified system that maintains consistent identity across providers."};var oe=v("<!><!><!>",1),ae=v("<!>: When users authenticate through any OAuth2 provider",1),se=v("<!>: When users want to link or unlink external provider accounts",1),ne=v("<!>: When maintaining a single user profile across multiple authentication methods",1),ie=v("<!><!><!>",1),le=v("<!><!><!>",1),de=v("For implementation details and code examples, refer to the <!>.",1),ue=v("Each email address must be unique across all users and identities. For example, if a user with email <!> creates an identity using <!>, that second email becomes reserved. This means no other user can create either a new account or a new identity using <!>. This restriction helps maintain consistent user identity across your application.",1),ce=v("<!><!>",1),$e=v("For detailed API specifications and code examples, refer to the <!>.",1),pe=v("<!><!><!>",1),he=v("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function Me(N){te(N,ee(re,{children:(Q,ve)=>{var w=he(),k=Y(w);h(k,{children:(t,l)=>{o();var e=s("Identities enable linking multiple authentication methods to a single user account. This allows users to access a unified account through various OAuth2 providers.");r(t,e)},$$slots:{default:!0}});var I=a(k);h(I,{children:(t,l)=>{o();var e=s("An identity is another way to refer to a user account. A single user can have multiple identities, each corresponding to different authentication methods. Currently, identities are primarily used with OAuth2 providers. When a user logs in via an OAuth2 provider, an identity is created and linked to their Backrush account. This system enables:");r(t,e)},$$slots:{default:!0}});var T=a(I);x(T,{ordered:!1,marker:"-",children:(t,l)=>{var e=oe(),d=m(e);p(d,{children:(n,$)=>{o();var i=s("Connecting multiple OAuth2 accounts to a single Backrush account");r(n,i)},$$slots:{default:!0}});var u=a(d);p(u,{children:(n,$)=>{o();var i=s("Maintaining consistent access regardless of login method");r(n,i)},$$slots:{default:!0}});var c=a(u);p(c,{children:(n,$)=>{o();var i=s("Tracking which external providers are linked to an account");r(n,i)},$$slots:{default:!0}}),r(t,e)},$$slots:{default:!0}});var O=a(T);_(O,{id:"use-cases",level:1,children:(t,l)=>{o();var e=s("Use cases");r(t,e)},$$slots:{default:!0}});var C=a(O);h(C,{children:(t,l)=>{o();var e=s("Identities are primarily used in the following scenarios:");r(t,e)},$$slots:{default:!0}});var L=a(C);x(L,{ordered:!0,marker:".",children:(t,l)=>{var e=ie(),d=m(e);p(d,{children:(n,$)=>{var i=ae(),f=m(i);b(f,{marker:"**",children:(g,K)=>{o();var P=s("OAuth2 authentication");r(g,P)},$$slots:{default:!0}}),o(),r(n,i)},$$slots:{default:!0}});var u=a(d);p(u,{children:(n,$)=>{var i=se(),f=m(i);b(f,{marker:"**",children:(g,K)=>{o();var P=s("Account management");r(g,P)},$$slots:{default:!0}}),o(),r(n,i)},$$slots:{default:!0}});var c=a(u);p(c,{children:(n,$)=>{var i=ne(),f=m(i);b(f,{marker:"**",children:(g,K)=>{o();var P=s("User profile consolidation");r(g,P)},$$slots:{default:!0}}),o(),r(n,i)},$$slots:{default:!0}}),r(t,e)},$$slots:{default:!0}});var W=a(L);_(W,{id:"create-new-identities",level:1,children:(t,l)=>{o();var e=s("Create new identities");r(t,e)},$$slots:{default:!0}});var q=a(W);h(q,{children:(t,l)=>{o();var e=s("To create a new identity:");r(t,e)},$$slots:{default:!0}});var F=a(q);x(F,{ordered:!0,marker:".",children:(t,l)=>{var e=le(),d=m(e);p(d,{children:(n,$)=>{o();var i=s("The user must be logged into their Backrush account");r(n,i)},$$slots:{default:!0}});var u=a(d);p(u,{children:(n,$)=>{o();var i=s("Initiate the OAuth2 authentication flow for the desired provider");r(n,i)},$$slots:{default:!0}});var c=a(u);p(c,{children:(n,$)=>{o();var i=s("The new identity will be automatically created and linked to the current account");r(n,i)},$$slots:{default:!0}}),r(t,e)},$$slots:{default:!0}});var H=a(F);h(H,{children:(t,l)=>{o();var e=de(),d=a(m(e));y(d,{href:"/docs/products/auth/oauth2",children:(u,c)=>{o();var n=s("OAuth2 documentation");r(u,n)},$$slots:{default:!0}}),o(),r(t,e)},$$slots:{default:!0}});var S=a(H);_(S,{id:"manage-email-addresses",level:1,children:(t,l)=>{o();var e=s("Manage email addresses");r(t,e)},$$slots:{default:!0}});var U=a(S);h(U,{children:(t,l)=>{o();var e=ue(),d=a(m(e));A(d,{content:"joe@example.com"});var u=a(d,2);A(u,{content:"other@company.com"});var c=a(u,2);A(c,{content:"other@company.com"}),o(),r(t,e)},$$slots:{default:!0}});var j=a(U);_(j,{id:"list-and-delete-identities",level:1,children:(t,l)=>{o();var e=s("List and delete identities");r(t,e)},$$slots:{default:!0}});var M=a(j);h(M,{children:(t,l)=>{o();var e=s("Users and administrators can manage identities through various operations available in the Account API:");r(t,e)},$$slots:{default:!0}});var z=a(M);x(z,{ordered:!1,marker:"-",children:(t,l)=>{var e=ce(),d=m(e);p(d,{children:(c,n)=>{y(c,{href:"/docs/references/cloud/client-web/account#listIdentities",children:($,i)=>{o();var f=s("List identities");r($,f)},$$slots:{default:!0}})},$$slots:{default:!0}});var u=a(d);p(u,{children:(c,n)=>{y(c,{href:"/docs/references/cloud/client-web/account#deleteIdentity",children:($,i)=>{o();var f=s("Delete an identity");r($,f)},$$slots:{default:!0}})},$$slots:{default:!0}}),r(t,e)},$$slots:{default:!0}});var B=a(z);h(B,{children:(t,l)=>{o();var e=$e(),d=a(m(e));y(d,{href:"/docs/references/cloud/client-web/account",children:(u,c)=>{o();var n=s("Account API Reference");r(u,n)},$$slots:{default:!0}}),o(),r(t,e)},$$slots:{default:!0}});var D=a(B);_(D,{id:"clean-up-identities",level:1,children:(t,l)=>{o();var e=s("Clean up identities");r(t,e)},$$slots:{default:!0}});var E=a(D);h(E,{children:(t,l)=>{o();var e=s("When a user account is deleted:");r(t,e)},$$slots:{default:!0}});var R=a(E);x(R,{ordered:!1,marker:"-",children:(t,l)=>{var e=pe(),d=m(e);p(d,{children:(n,$)=>{o();var i=s("Associated identities (and related targets) are removed via a background job");r(n,i)},$$slots:{default:!0}});var u=a(d);p(u,{children:(n,$)=>{o();var i=s("This deletion is asynchronous and may not be immediate due to queue processing times");r(n,i)},$$slots:{default:!0}});var c=a(u);p(c,{children:(n,$)=>{o();var i=s("In testing scenarios where instant deletion is required, manually remove identities (and targets) before deleting the user account");r(n,i)},$$slots:{default:!0}}),r(t,e)},$$slots:{default:!0}});var V=a(R);_(V,{id:"best-practices",level:1,children:(t,l)=>{o();var e=s("Best practices");r(t,e)},$$slots:{default:!0}});var G=a(V);h(G,{children:(t,l)=>{o();var e=s("A good user experience typically includes clear visibility of connected providers and straightforward identity management.");r(t,e)},$$slots:{default:!0}});var J=a(G);h(J,{children:(t,l)=>{o();var e=s("Verify email addresses where possible and implement proper session management. Secure identity deletion can help prevent unauthorized access.");r(t,e)},$$slots:{default:!0}});var X=a(J);h(X,{children:(t,l)=>{o();var e=s("Testing should ideally cover the cleanup of test identities and email conflict scenarios.");r(t,e)},$$slots:{default:!0}}),Z(w),r(Q,w)},$$slots:{default:!0}}))}export{Me as component};
