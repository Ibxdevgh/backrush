import{t as v,b as s,a as e}from"../chunks/Cw4I5osi.js";import"../chunks/BzVk5r6l.js";import{c as ot,s as r,f as y,n as t,r as rt}from"../chunks/NgVQVlRK.js";import{n as nt}from"../chunks/B4IyMRKX.js";import{H as g}from"../chunks/CXsRaEhZ.js";import"../chunks/hMT8fFzP.js";import"../chunks/NwRJ91PD.js";/* empty css                */import"../chunks/BZUG4Puk.js";/* empty css                */import"../chunks/D9bBQFLV.js";import{C as V}from"../chunks/DXp9_3zM.js";import"../chunks/DOf4ro_L.js";import"../chunks/CKaMv3wE.js";/* empty css                */import{L as X,I as P}from"../chunks/BhmTgGWB.js";import{P as p}from"../chunks/D8YsId2T.js";import{S as f}from"../chunks/yHjwcyUH.js";import{L as C}from"../chunks/yh4_9ChP.js";import"../chunks/POtwinrL.js";import"../chunks/CbbZjpT6.js";/* empty css                */import{A as st}from"../chunks/CqOphJLh.js";const at={layout:"article",title:"Deploy from Git",description:"Learn to version and update your Backrush Functions' code with deployments."};var it=v("You can only use Git deployment for Backrush Functions connected to Git. <!> or connect your existing function to a Git repository in your function&#39;s <!> &gt; <!> &gt; <!> &gt; <!>.",1),lt=v("<!><!><!><!>",1),dt=v("When you push a commit to the production branch, usually <!>, a new deployment will be created, built, and activated. This means, the new deployments will <!> and handle all incoming requests.",1),ut=v("If you need to update your Git configuration, navigate to <!> &gt; your function &gt; <!> &gt; <!> &gt; <!>.",1),ct=v("The entry point is the code file contains the exported function that will be executed when the function is called. This entry point has a specific format that must be followed. You can find examples using a <!> or following the <!>.",1),$t=v("If you&#39;re sharing code between multiple Backrush Functions in a monorepo, referencing files outside of the entry point file will not work. To share code between multiple functions, set the root directory to be the common root of the mono repo, and use <!> in your <!> to navigate to the function&#39;s directory before building.",1),pt=v("If you notice your function is missing dependencies during build or at runtimes, update it&#39;s build settings. Navigate to <!> &gt; your function &gt; <!> &gt; <!> &gt; <!>. These commands will be ran before the function is built and can be used to install dependencies.",1),ft=v("If you&#39;re missing some code files at build time, make sure they are included in the Git configuration&#39;s <!>. Only files in the root directory folder will be copied to the executor.",1),ht=v("If you&#39;re self-hosting Backrush, you will need to configure some <!> to enable Git deployments.",1),mt=v("<!><!><!><!>",1),vt=v("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function Nt(Z){st(Z,nt(at,{children:(tt,_t)=>{var F=vt(),T=ot(F);p(T,{children:(n,d)=>{t();var o=s("Backrush Functions are mini-applications in Backrush with their own endpoints. Each function can have many deployments, which can be thought of as versions of the mini-application.");e(n,o)},$$slots:{default:!0}});var S=r(T);p(S,{children:(n,d)=>{t();var o=s("Backrush Functions can be automatically deployed from Git repositories, so you can track changes to your function's code naturally as a part of you development workflow.");e(n,o)},$$slots:{default:!0}});var L=r(S);g(L,{id:"create-deployment",level:1,children:(n,d)=>{t();var o=s("Create deployment");e(n,o)},$$slots:{default:!0}});var q=r(L);p(q,{children:(n,d)=>{t();var o=s("The recommended way to manage your Backrush Function deployments is to use a version control system, like Git. This offers simple versioning and collaboration that will easily fit into the rest of your development workflow.");e(n,o)},$$slots:{default:!0}});var B=r(q);p(B,{children:(n,d)=>{t();var o=it(),u=r(y(o));C(u,{href:"/docs/products/functions/functions#create-function",children:(l,i)=>{t();var h=s("Create a new function with Git");e(l,h)},$$slots:{default:!0}});var $=r(u,2);f($,{marker:"**",children:(l,i)=>{t();var h=s("Settings");e(l,h)},$$slots:{default:!0}});var c=r($,2);f(c,{marker:"**",children:(l,i)=>{t();var h=s("Configuration");e(l,h)},$$slots:{default:!0}});var m=r(c,2);f(m,{marker:"**",children:(l,i)=>{t();var h=s("Git settings");e(l,h)},$$slots:{default:!0}});var a=r(m,2);f(a,{marker:"**",children:(l,i)=>{t();var h=s("Connect Git");e(l,h)},$$slots:{default:!0}}),t(),e(n,o)},$$slots:{default:!0}});var D=r(B);X(D,{ordered:!0,marker:".",children:(n,d)=>{var o=lt(),u=y(o);P(u,{children:(a,l)=>{t();var i=s("Using Git, checkout the branch you configured as the production branch when creating the Backrush Function.");e(a,i)},$$slots:{default:!0}});var $=r(u);P($,{children:(a,l)=>{t();var i=s("Create a new commit.");e(a,i)},$$slots:{default:!0}});var c=r($);P(c,{children:(a,l)=>{t();var i=s("Push your new commit.");e(a,i)},$$slots:{default:!0}});var m=r(c);P(m,{children:(a,l)=>{t();var i=s("A new deployment will be automatically created, built and activated.");e(a,i)},$$slots:{default:!0}}),e(n,o)},$$slots:{default:!0}});var E=r(D);g(E,{id:"commits-to-production-branch",level:2,children:(n,d)=>{t();var o=s("Commits to the production branch");e(n,o)},$$slots:{default:!0}});var H=r(E);p(H,{children:(n,d)=>{t();var o=dt(),u=r(y(o));V(u,{content:"main"});var $=r(u,2);f($,{marker:"**",children:(c,m)=>{t();var a=s("immediately replace the current active deployment");e(c,a)},$$slots:{default:!0}}),t(),e(n,o)},$$slots:{default:!0}});var R=r(H);g(R,{id:"commits-to-other-branches",level:2,children:(n,d)=>{t();var o=s("Commits to other branches");e(n,o)},$$slots:{default:!0}});var W=r(R);p(W,{children:(n,d)=>{t();var o=s("When you push a commit to a branch other than the production branch, a new deployment will be created, but it will not be activated. This means, the new deployment will not handle any incoming requests until it is activated.");e(n,o)},$$slots:{default:!0}});var Y=r(W);g(Y,{level:1,children:(n,d)=>{t();var o=s("Git configuration");e(n,o)},$$slots:{default:!0}});var N=r(Y);p(N,{children:(n,d)=>{t();var o=ut(),u=r(y(o));f(u,{marker:"**",children:(a,l)=>{t();var i=s("Functions");e(a,i)},$$slots:{default:!0}});var $=r(u,2);f($,{marker:"**",children:(a,l)=>{t();var i=s("Settings");e(a,i)},$$slots:{default:!0}});var c=r($,2);f(c,{marker:"**",children:(a,l)=>{t();var i=s("Configuration");e(a,i)},$$slots:{default:!0}});var m=r(c,2);f(m,{marker:"**",children:(a,l)=>{t();var i=s("Git settings");e(a,i)},$$slots:{default:!0}}),t(),e(n,o)},$$slots:{default:!0}});var O=r(N);g(O,{id:"entry-point",level:2,children:(n,d)=>{t();var o=s("Entry point");e(n,o)},$$slots:{default:!0}});var U=r(O);p(U,{children:(n,d)=>{t();var o=ct(),u=r(y(o));C(u,{href:"/docs/products/functions/templates",children:(c,m)=>{t();var a=s("starter template");e(c,a)},$$slots:{default:!0}});var $=r(u,2);C($,{href:"/docs/products/functions/develop",children:(c,m)=>{t();var a=s("developing functions docs");e(c,a)},$$slots:{default:!0}}),t(),e(n,o)},$$slots:{default:!0}});var j=r(U);g(j,{id:"root-directory",level:2,children:(n,d)=>{t();var o=s("Root directory");e(n,o)},$$slots:{default:!0}});var z=r(j);p(z,{children:(n,d)=>{t();var o=s("The root directory is the root of the code that will be copied to the executor. If you have a monorepo, you can specify the subdirectory that contains the function's code using the root directory setting.");e(n,o)},$$slots:{default:!0}});var J=r(z);g(J,{id:"share-code-between-multiple-functions",level:2,children:(n,d)=>{t();var o=s("Share code between multiple functions");e(n,o)},$$slots:{default:!0}});var K=r(J);p(K,{children:(n,d)=>{t();var o=$t(),u=r(y(o));V(u,{content:"cd <working directory>"});var $=r(u,2);f($,{marker:"**",children:(c,m)=>{t();var a=s("Build settings");e(c,a)},$$slots:{default:!0}}),t(),e(n,o)},$$slots:{default:!0}});var M=r(K);p(M,{children:(n,d)=>{t();var o=s("Another option is to use submodules in your Git repository to include shared code in each function's repository.");e(n,o)},$$slots:{default:!0}});var Q=r(M);g(Q,{id:"debugging",level:1,children:(n,d)=>{t();var o=s("Debugging");e(n,o)},$$slots:{default:!0}});var et=r(Q);X(et,{ordered:!1,marker:"-",children:(n,d)=>{var o=mt(),u=y(o);P(u,{children:(a,l)=>{p(a,{children:(i,h)=>{t();var _=s("If you updated your function's configuration but the deployment is not working as expected, you may need to first redeploy your function before the changes take effect.");e(i,_)},$$slots:{default:!0}})},$$slots:{default:!0}});var $=r(u);P($,{children:(a,l)=>{p(a,{children:(i,h)=>{t();var _=pt(),b=r(y(_));f(b,{marker:"**",children:(w,I)=>{t();var x=s("Functions");e(w,x)},$$slots:{default:!0}});var k=r(b,2);f(k,{marker:"**",children:(w,I)=>{t();var x=s("Settings");e(w,x)},$$slots:{default:!0}});var A=r(k,2);f(A,{marker:"**",children:(w,I)=>{t();var x=s("Configuration");e(w,x)},$$slots:{default:!0}});var G=r(A,2);f(G,{marker:"**",children:(w,I)=>{t();var x=s("Build settings");e(w,x)},$$slots:{default:!0}}),t(),e(i,_)},$$slots:{default:!0}})},$$slots:{default:!0}});var c=r($);P(c,{children:(a,l)=>{p(a,{children:(i,h)=>{t();var _=ft(),b=r(y(_));f(b,{marker:"**",children:(k,A)=>{t();var G=s("Root directory");e(k,G)},$$slots:{default:!0}}),t(),e(i,_)},$$slots:{default:!0}})},$$slots:{default:!0}});var m=r(c);P(m,{children:(a,l)=>{p(a,{children:(i,h)=>{t();var _=ht(),b=r(y(_));C(b,{href:"/docs/advanced/self-hosting/functions",children:(k,A)=>{t();var G=s("environment variables");e(k,G)},$$slots:{default:!0}}),t(),e(i,_)},$$slots:{default:!0}})},$$slots:{default:!0}}),e(n,o)},$$slots:{default:!0}}),rt(F),e(tt,F)},$$slots:{default:!0}}))}export{Nt as component};
