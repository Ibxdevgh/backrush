import{t as u,b as s,a as e}from"../chunks/Cw4I5osi.js";import"../chunks/BzVk5r6l.js";import{c as _e,s as t,f as c,n as r,r as me}from"../chunks/NgVQVlRK.js";import{n as ge}from"../chunks/B4IyMRKX.js";import{H as B}from"../chunks/CXsRaEhZ.js";import"../chunks/hMT8fFzP.js";import"../chunks/NwRJ91PD.js";/* empty css                */import"../chunks/BZUG4Puk.js";/* empty css                */import"../chunks/D9bBQFLV.js";import{C as F}from"../chunks/DXp9_3zM.js";import{F as Pe}from"../chunks/OFUKRh55.js";import{L as N,I as T}from"../chunks/BhmTgGWB.js";import{P as C}from"../chunks/D8YsId2T.js";import{S as G}from"../chunks/yHjwcyUH.js";import{L as xe}from"../chunks/yh4_9ChP.js";import{T as pe}from"../chunks/D8BqvLkQ.js";import{T as ue,a as E,b as H,c as ce,d as P}from"../chunks/BpU_IltG.js";import{A as we}from"../chunks/CqOphJLh.js";const be={layout:"article",title:"Compression",description:null};var ye=u("Backrush supports two primary algorithms for text-based responses: <!> and <!>. These algorithms are integral for improving data transfer speeds across the HTTP based APIs, especially when dealing with textual content, which tends to be highly compressible.",1),Ie=u("<!>: Chosen for its superior compression efficiency, especially for smaller files. Brotli performs best in HTTP/2 and HTTP/3 environments, where smaller payloads mean faster transfers and lower bandwidth consumption. Its efficiency also allows for quicker decompression on modern clients.",1),Ae=u("<!>: Gzip remains supported for backward compatibility and for clients that do not yet fully support Brotli. Though Gzip has a lower compression ratio compared to Brotli, it is still a reliable fallback for older browsers and HTTP/1.1 connections.",1),ke=u("<!>: Zstd offers very high compression ratios and significantly faster decompression speeds, making it ideal for server-to-server communication and large data transfers. While its browser support is limited compared to Brotli and Gzip, Zstd excels in scenarios where performance and efficiency are critical for backend processes.",1),Te=u("<!><!><!>",1),ze=u("<!>: Only text-based MIME types are eligible for compression. These include:",1),Ge=u("<!><!><!><!><!><!><!><!>",1),Fe=u("<!>: Compression is applied when the size of the response exceeds <!>. This threshold has been selected based on testing to minimize the CPU overhead of compression for small payloads, where the gains in bandwidth reduction are negligible.",1),Ce=u("<!>: Clients indicate their support for specific compression algorithms via the <!> HTTP header. Backrush prioritizes compression based on the following client-provided values:",1),Ee=u("<!>: Indicates support for Brotli compression.",1),Be=u("<!>: Indicates support for Zstandard compression.",1),He=u("<!>: Indicates support for Gzip compression.",1),Ne=u("<!>: Indicates that no compression is supported or requested.",1),De=u("<!><!><!><!>",1),Se=u("<!><!>",1),je=u("<!><!>",1),qe=u("<!><!><!><!>",1),Je=u("<!><!><!><!>",1),Me=u("<!><!><!><!>",1),Le=u("<!><!><!><!>",1),Ve=u("<!><!><!><!>",1),We=u("<!><!><!><!>",1),Oe=u("<!><!>",1),Re=u("Compression is enabled by default for eligible API responses in Backrush. You do not need to manually enable it; Backrush dynamically selects the best algorithm based on the client’s <!> headers and the MIME type of the response.",1),Ye=u("Backrush&#39;s API supports the <!> during manipulation and preview generation. The primary reason for compressing images is to minimize file sizes while maintaining visual quality, thus reducing both bandwidth usage and storage costs.",1),Ze=u("<!>, <!>, <!>: These are traditional formats supported for compatibility reasons. PNG supports lossless compression, while JPEG and GIF are lossy but optimized for small sizes.",1),Ue=u("<!>: A modern format developed by Google, offering better compression rates than JPEG, PNG, or GIF while maintaining equivalent quality.",1),Ke=u("<!>: The most modern image format supported by Backrush, which offers even higher compression rates than WebP. AVIF is based on the AV1 video codec and is optimized for high-performance image rendering with minimal bandwidth use.",1),Qe=u("<!><!><!>",1),Xe=u("<!><!><!><!>",1),er=u("<!><!><!><!>",1),rr=u("<!><!><!><!>",1),tr=u("<!><!><!><!>",1),or=u("<!><!><!><!>",1),sr=u("<!><!><!><!>",1),ar=u("<!><!>",1),lr=u("You can enable image compression through the <!> by specifying the desired output format in API calls. For example, requesting a WebP or AVIF conversion automatically triggers Backrush&#39;s compression algorithms to optimize the image size.",1),nr=u("<article><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!><!></article>");function zr(ve){we(ve,ge(be,{children:(fe,ir)=>{var D=nr(),S=_e(D);C(S,{children:(n,b)=>{r();var a=s("Backrush is leveraging compression algorithms to both boost the performance of your app and to reduce and optimize bandwidth and storage costs for Backrush developers. This page provides an in-depth explanation of the compression algorithms supported by Backrush for API responses, image transformations, and storage buckets.");e(n,a)},$$slots:{default:!0}});var j=t(S);B(j,{id:"api",level:1,children:(n,b)=>{r();var a=s("API");e(n,a)},$$slots:{default:!0}});var q=t(j);C(q,{children:(n,b)=>{r();var a=ye(),y=t(c(a));G(y,{marker:"**",children:(I,x)=>{r();var w=s("Brotli");e(I,w)},$$slots:{default:!0}});var A=t(y,2);G(A,{marker:"**",children:(I,x)=>{r();var w=s("Gzip");e(I,w)},$$slots:{default:!0}}),r(),e(n,a)},$$slots:{default:!0}});var J=t(q);N(J,{ordered:!1,marker:"-",children:(n,b)=>{var a=Te(),y=c(a);T(y,{children:(x,w)=>{var h=Ie(),g=c(h);G(g,{marker:"**",children:(_,v)=>{r();var i=s("Brotli");e(_,i)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}});var A=t(y);T(A,{children:(x,w)=>{var h=Ae(),g=c(h);G(g,{marker:"**",children:(_,v)=>{r();var i=s("Gzip");e(_,i)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}});var I=t(A);T(I,{children:(x,w)=>{var h=ke(),g=c(h);G(g,{marker:"**",children:(_,v)=>{r();var i=s("Zstd");e(_,i)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var M=t(J);B(M,{id:"conditions",level:2,children:(n,b)=>{r();var a=s("Conditions");e(n,a)},$$slots:{default:!0}});var L=t(M);C(L,{children:(n,b)=>{r();var a=s("Compression in Backrush is triggered dynamically based on several conditions. This ensures that we only compress data when it is beneficial for performance and that we avoid unnecessary overhead for small payloads or non-textual data.");e(n,a)},$$slots:{default:!0}});var V=t(L);N(V,{ordered:!0,marker:".",children:(n,b)=>{T(n,{children:(a,y)=>{var A=ze(),I=c(A);G(I,{marker:"**",children:(x,w)=>{r();var h=s("MIME types");e(x,h)},$$slots:{default:!0}}),r(),e(a,A)},$$slots:{default:!0}})},$$slots:{default:!0}});var W=t(V);N(W,{ordered:!1,marker:"-",children:(n,b)=>{var a=Ge(),y=c(a);T(y,{children:(v,i)=>{F(v,{content:"text/plain"})},$$slots:{default:!0}});var A=t(y);T(A,{children:(v,i)=>{F(v,{content:"text/css"})},$$slots:{default:!0}});var I=t(A);T(I,{children:(v,i)=>{F(v,{content:"text/javascript"})},$$slots:{default:!0}});var x=t(I);T(x,{children:(v,i)=>{F(v,{content:"application/javascript"})},$$slots:{default:!0}});var w=t(x);T(w,{children:(v,i)=>{F(v,{content:"text/html"})},$$slots:{default:!0}});var h=t(w);T(h,{children:(v,i)=>{F(v,{content:"application/json"})},$$slots:{default:!0}});var g=t(h);T(g,{children:(v,i)=>{F(v,{content:"image/svg+xml"})},$$slots:{default:!0}});var _=t(g);T(_,{children:(v,i)=>{F(v,{content:"application/xml+rss"})},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var O=t(W);C(O,{children:(n,b)=>{r();var a=s("This selection is based on the nature of these content types being easily compressible, resulting in significant size reductions without loss of information.");e(n,a)},$$slots:{default:!0}});var R=t(O);N(R,{ordered:!0,start:2,marker:".",children:(n,b)=>{var a=je(),y=c(a);T(y,{children:(I,x)=>{C(I,{children:(w,h)=>{var g=Fe(),_=c(g);G(_,{marker:"**",children:(i,k)=>{r();var d=s("Response size");e(i,d)},$$slots:{default:!0}});var v=t(_,2);G(v,{marker:"**",children:(i,k)=>{r();var d=s("1KB");e(i,d)},$$slots:{default:!0}}),r(),e(w,g)},$$slots:{default:!0}})},$$slots:{default:!0}});var A=t(y);T(A,{children:(I,x)=>{var w=Se(),h=c(w);C(h,{children:(_,v)=>{var i=Ce(),k=c(i);G(k,{marker:"**",children:(f,$)=>{r();var m=s("Client-side support");e(f,m)},$$slots:{default:!0}});var d=t(k,2);F(d,{content:"Accept-Encoding"}),r(),e(_,i)},$$slots:{default:!0}});var g=t(h);N(g,{ordered:!1,marker:"-",children:(_,v)=>{var i=De(),k=c(i);T(k,{children:(m,z)=>{var o=Ee(),p=c(o);F(p,{content:"br"}),r(),e(m,o)},$$slots:{default:!0}});var d=t(k);T(d,{children:(m,z)=>{var o=Be(),p=c(o);F(p,{content:"zstd"}),r(),e(m,o)},$$slots:{default:!0}});var f=t(d);T(f,{children:(m,z)=>{var o=He(),p=c(o);F(p,{content:"gzip"}),r(),e(m,o)},$$slots:{default:!0}});var $=t(f);T($,{children:(m,z)=>{var o=Ne(),p=c(o);F(p,{content:"identity"}),r(),e(m,o)},$$slots:{default:!0}}),e(_,i)},$$slots:{default:!0}}),e(I,w)},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var Y=t(R);B(Y,{id:"prioritizations",level:2,children:(n,b)=>{r();var a=s("Prioritizations");e(n,a)},$$slots:{default:!0}});var Z=t(Y);C(Z,{children:(n,b)=>{r();var a=s("Backrush prioritizes Brotli over Gzip due to Brotli’s more efficient compression ratio, especially when dealing with text-based content like HTML, CSS, and JSON files. Brotli uses a sliding window dictionary that results in higher compression ratios at slower speeds, but in an HTTP/2 or HTTP/3 environment, the benefits outweigh the costs. Gzip is used as a fallback when Brotli is not supported by the client.");e(n,a)},$$slots:{default:!0}});var U=t(Z);pe(U,{children:(n,b)=>{var a=Oe(),y=c(a);ue(y,{children:(I,x)=>{E(I,{children:(w,h)=>{var g=qe(),_=c(g);H(_,{width:120,children:(d,f)=>{r();var $=s("Algorithm");e(d,$)},$$slots:{default:!0}});var v=t(_);H(v,{width:120,children:(d,f)=>{r();var $=s("Ratio");e(d,$)},$$slots:{default:!0}});var i=t(v);H(i,{children:(d,f)=>{r();var $=s("Browsers");e(d,$)},$$slots:{default:!0}});var k=t(i);H(k,{children:(d,f)=>{r();var $=s("Notes");e(d,$)},$$slots:{default:!0}}),e(w,g)},$$slots:{default:!0}})},$$slots:{default:!0}});var A=t(y);ce(A,{children:(I,x)=>{var w=We(),h=c(w);E(h,{children:(i,k)=>{var d=Je(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("Brotli");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("High");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("All modern browsers");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Optimal for small text files; highly efficient.");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var g=t(h);E(g,{children:(i,k)=>{var d=Me(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("Gzip");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("Medium");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Universal");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Broad compatibility with older and modern clients.");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var _=t(g);E(_,{children:(i,k)=>{var d=Le(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("Zstd");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("Very High");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Limited");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("High performance with faster decompression speeds, ideal for server-to-server communication.");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var v=t(_);E(v,{children:(i,k)=>{var d=Ve(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("Identity");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("None");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Universal");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Used when no compression is applied or supported.");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}}),e(I,w)},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var K=t(U);B(K,{id:"enabling-compression-1",level:2,children:(n,b)=>{r();var a=s("Enabling compression");e(n,a)},$$slots:{default:!0}});var Q=t(K);C(Q,{children:(n,b)=>{r();var a=Re(),y=t(c(a));F(y,{content:"Accept-Encoding"}),r(),e(n,a)},$$slots:{default:!0}});var X=t(Q);B(X,{id:"image-transformations",level:1,children:(n,b)=>{r();var a=s("Image transformations");e(n,a)},$$slots:{default:!0}});var ee=t(X);C(ee,{children:(n,b)=>{r();var a=Ye(),y=t(c(a));xe(y,{href:"/docs/products/storage/images",children:(A,I)=>{r();var x=s("compression of image files");e(A,x)},$$slots:{default:!0}}),r(),e(n,a)},$$slots:{default:!0}});var re=t(ee);C(re,{children:(n,b)=>{r();var a=s("Backrush supports both legacy and modern image formats, including:");e(n,a)},$$slots:{default:!0}});var te=t(re);N(te,{ordered:!1,marker:"-",children:(n,b)=>{var a=Qe(),y=c(a);T(y,{children:(x,w)=>{var h=Ze(),g=c(h);G(g,{marker:"**",children:(i,k)=>{r();var d=s("PNG");e(i,d)},$$slots:{default:!0}});var _=t(g,2);G(_,{marker:"**",children:(i,k)=>{r();var d=s("JPEG");e(i,d)},$$slots:{default:!0}});var v=t(_,2);G(v,{marker:"**",children:(i,k)=>{r();var d=s("GIF");e(i,d)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}});var A=t(y);T(A,{children:(x,w)=>{var h=Ue(),g=c(h);G(g,{marker:"**",children:(_,v)=>{r();var i=s("WebP");e(_,i)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}});var I=t(A);T(I,{children:(x,w)=>{var h=Ke(),g=c(h);G(g,{marker:"**",children:(_,v)=>{r();var i=s("AVIF");e(_,i)},$$slots:{default:!0}}),r(),e(x,h)},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var oe=t(te);B(oe,{id:"supported-api-endpoints",level:2,children:(n,b)=>{r();var a=s("Supported API endpoints");e(n,a)},$$slots:{default:!0}});var se=t(oe);C(se,{children:(n,b)=>{r();var a=s("Backrush applies image compression exclusively through the Image Preview API. This ensures that any dynamic operations, such as generating previews, resizing images, or converting between formats, are optimized for performance and reduced file size. Images uploaded through the Storage API remain in their original format and quality without automatic compression to preserve your source of truth.");e(n,a)},$$slots:{default:!0}});var ae=t(se);B(ae,{id:"prioritization",level:2,children:(n,b)=>{r();var a=s("Prioritization");e(n,a)},$$slots:{default:!0}});var le=t(ae);C(le,{children:(n,b)=>{r();var a=s("Backrush does not apply any image compression by default. Developers have full control over the output compression by specifying it in the query string when using the Image Preview API. This allows for precise customization to suit various use cases.");e(n,a)},$$slots:{default:!0}});var ne=t(le);C(ne,{children:(n,b)=>{r();var a=s("Backrush supports modern image formats like WebP and AVIF for their exceptional compression rates and compatibility with most browsers. While WebP is often the default choice for conversions, AVIF is recommended when seeking optimal performance and minimal file sizes.");e(n,a)},$$slots:{default:!0}});var ie=t(ne);Pe(ie,{content:`import { Client, Storage } from "appwrite";

const client = new Client();
const storage = new Storage(client);

client
    .setEndpoint('https://<REGION>.cloud.appwrite.io/v1') // Your API Endpoint
    .setProject('<PROJECT_ID>') // Your project ID
;

const result = storage.getFilePreview(
    'photos',           // bucket ID
    'sunset.png',       // file ID
    1800,               // width, will be resized using this value.
    0,                  // height, ignored when 0
    'center',           // crop center
    '90',               // slight compression
    5,                  // border width
    'CDCA30',           // border color
    15,                 // border radius
    1,                  // full opacity
    0,                  // no rotation
    'FFFFFF',           // background color
    'webp'              // output jpg format
);

console.log(result.href);
`,language:"javascript",process:!0,children:(n,b)=>{r();var a=s(`import { Client, Storage } from "appwrite";

const client = new Client();
const storage = new Storage(client);

client
    .setEndpoint('https://<REGION>.cloud.appwrite.io/v1') // Your API Endpoint
    .setProject('<PROJECT_ID>') // Your project ID
;

const result = storage.getFilePreview(
    'photos',           // bucket ID
    'sunset.png',       // file ID
    1800,               // width, will be resized using this value.
    0,                  // height, ignored when 0
    'center',           // crop center
    '90',               // slight compression
    5,                  // border width
    'CDCA30',           // border color
    15,                 // border radius
    1,                  // full opacity
    0,                  // no rotation
    'FFFFFF',           // background color
    'webp'              // output jpg format
);

console.log(result.href);`);e(n,a)},$$slots:{default:!0}});var de=t(ie);pe(de,{children:(n,b)=>{var a=ar(),y=c(a);ue(y,{children:(I,x)=>{E(I,{children:(w,h)=>{var g=Xe(),_=c(g);H(_,{width:120,children:(d,f)=>{r();var $=s("Algorithm");e(d,$)},$$slots:{default:!0}});var v=t(_);H(v,{children:(d,f)=>{r();var $=s("Formats");e(d,$)},$$slots:{default:!0}});var i=t(v);H(i,{width:120,children:(d,f)=>{r();var $=s("Ratio");e(d,$)},$$slots:{default:!0}});var k=t(i);H(k,{children:(d,f)=>{r();var $=s("Notes");e(d,$)},$$slots:{default:!0}}),e(w,g)},$$slots:{default:!0}})},$$slots:{default:!0}});var A=t(y);ce(A,{children:(I,x)=>{var w=sr(),h=c(w);E(h,{children:(i,k)=>{var d=er(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("WebP");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("PNG, JPEG, GIF");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("High");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Great balance of compression efficiency and visual quality");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var g=t(h);E(g,{children:(i,k)=>{var d=rr(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("AVIF");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("PNG, JPEG, GIF");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Best");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Highest compression rate for modern use cases");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var _=t(g);E(_,{children:(i,k)=>{var d=tr(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("JPEG");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("JPEG");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Medium");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Legacy support for lossy compression");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}});var v=t(_);E(v,{children:(i,k)=>{var d=or(),f=c(d);P(f,{children:(o,p)=>{r();var l=s("PNG");e(o,l)},$$slots:{default:!0}});var $=t(f);P($,{children:(o,p)=>{r();var l=s("PNG");e(o,l)},$$slots:{default:!0}});var m=t($);P(m,{children:(o,p)=>{r();var l=s("Lossless");e(o,l)},$$slots:{default:!0}});var z=t(m);P(z,{children:(o,p)=>{r();var l=s("Necessary for lossless compression requirements");e(o,l)},$$slots:{default:!0}}),e(i,d)},$$slots:{default:!0}}),e(I,w)},$$slots:{default:!0}}),e(n,a)},$$slots:{default:!0}});var $e=t(de);B($e,{id:"enabling-compression-2",level:2,children:(n,b)=>{r();var a=s("Enabling compression");e(n,a)},$$slots:{default:!0}});var he=t($e);C(he,{children:(n,b)=>{r();var a=lr(),y=t(c(a));G(y,{marker:"**",children:(A,I)=>{r();var x=s("Image Preview API");e(A,x)},$$slots:{default:!0}}),r(),e(n,a)},$$slots:{default:!0}}),me(D),e(fe,D)},$$slots:{default:!0}}))}export{zr as component};
