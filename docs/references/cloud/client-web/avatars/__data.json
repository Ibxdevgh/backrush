{"type":"data","nodes":[{"type":"skip"},{"type":"skip"},{"type":"skip"},{"type":"data","data":[{"service":1,"methods":4},{"name":2,"description":3},"avatars","The Avatars service aims to help you complete everyday tasks related to your app image, icons, and avatars.\n\nThe Avatars service allows you to fetch country flags, browser icons, payment methods logos, remote websites favicons, generate QR codes, and manipulate remote image URLs.\n\nAll endpoints in this service allow you to resize, crop, and change the output image quality for maximum performance and visibility in your app.\n",[5,37,52,67,84,96,119],{"id":6,"group":7,"demo":8,"title":9,"description":10,"parameters":11,"responses":28,"method":32,"url":33,"rate-limit":34,"rate-time":35,"rate-key":36},"getCreditCard",null,"import { Client, Avatars, CreditCard } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getCreditCard(\n    CreditCard.AmericanExpress, // code\n    0, // width (optional)\n    0, // height (optional)\n    -1 // quality (optional)\n);\n\nconsole.log(result);\n","Get credit card icon","The credit card endpoint will return you the icon of the credit card provider you need. Use width, height and quality arguments to change the output settings.\n\nWhen one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n",[12,17,22,25],{"name":13,"description":14,"required":15,"type":16,"example":-1},"code","Credit Card Code. Possible values: amex, argencard, cabal, cencosud, diners, discover, elo, hipercard, jcb, mastercard, naranja, targeta-shopping, union-china-pay, visa, mir, maestro, rupay.",true,"string",{"name":18,"description":19,"required":20,"type":21,"example":-1},"width","Image width. Pass an integer between 0 to 2000. Defaults to 100.",false,"integer",{"name":23,"description":24,"required":20,"type":21,"example":-1},"height","Image height. Pass an integer between 0 to 2000. Defaults to 100.",{"name":26,"description":27,"required":20,"type":21,"example":-1},"quality","Image quality. Pass an integer between 0 to 100. Defaults to keep existing image quality.",[29],{"code":30,"contentType":-1,"models":31},200,[],"get","/avatars/credit-cards/{code}",0,3600,"url:{url},ip:{ip}",{"id":38,"group":7,"demo":39,"title":40,"description":41,"parameters":42,"responses":48,"method":32,"url":51,"rate-limit":34,"rate-time":35,"rate-key":36},"getBrowser","import { Client, Avatars, Browser } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getBrowser(\n    Browser.AvantBrowser, // code\n    0, // width (optional)\n    0, // height (optional)\n    -1 // quality (optional)\n);\n\nconsole.log(result);\n","Get browser icon","You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user [GET /account/sessions](https://appwrite.io/docs/references/cloud/client-web/account#getSessions) endpoint. Use width, height and quality arguments to change the output settings.\n\nWhen one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.",[43,45,46,47],{"name":13,"description":44,"required":15,"type":16,"example":-1},"Browser Code.",{"name":18,"description":19,"required":20,"type":21,"example":-1},{"name":23,"description":24,"required":20,"type":21,"example":-1},{"name":26,"description":27,"required":20,"type":21,"example":-1},[49],{"code":30,"contentType":-1,"models":50},[],"/avatars/browsers/{code}",{"id":53,"group":7,"demo":54,"title":55,"description":56,"parameters":57,"responses":63,"method":32,"url":66,"rate-limit":34,"rate-time":35,"rate-key":36},"getFlag","import { Client, Avatars, Flag } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getFlag(\n    Flag.Afghanistan, // code\n    0, // width (optional)\n    0, // height (optional)\n    -1 // quality (optional)\n);\n\nconsole.log(result);\n","Get country flag","You can use this endpoint to show different country flags icons to your users. The code argument receives the 2 letter country code. Use width, height and quality arguments to change the output settings. Country codes follow the [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) standard.\n\nWhen one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n",[58,60,61,62],{"name":13,"description":59,"required":15,"type":16,"example":-1},"Country Code. ISO Alpha-2 country code format.",{"name":18,"description":19,"required":20,"type":21,"example":-1},{"name":23,"description":24,"required":20,"type":21,"example":-1},{"name":26,"description":27,"required":20,"type":21,"example":-1},[64],{"code":30,"contentType":-1,"models":65},[],"/avatars/flags/{code}",{"id":68,"group":7,"demo":69,"title":70,"description":71,"parameters":72,"responses":80,"method":32,"url":83,"rate-limit":34,"rate-time":35,"rate-key":36},"getImage","import { Client, Avatars } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getImage(\n    'https://example.com', // url\n    0, // width (optional)\n    0 // height (optional)\n);\n\nconsole.log(result);\n","Get image from URL","Use this endpoint to fetch a remote image URL and crop it to any image size you want. This endpoint is very useful if you need to crop and display remote images in your app or in case you want to make sure a 3rd party image is properly served using a TLS protocol.\n\nWhen one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 400x400px.\n\nThis endpoint does not follow HTTP redirects.",[73,76,78],{"name":74,"description":75,"required":15,"type":16,"example":-1},"url","Image URL which you want to crop.",{"name":18,"description":77,"required":20,"type":21,"example":-1},"Resize preview image width, Pass an integer between 0 to 2000. Defaults to 400.",{"name":23,"description":79,"required":20,"type":21,"example":-1},"Resize preview image height, Pass an integer between 0 to 2000. Defaults to 400.",[81],{"code":30,"contentType":-1,"models":82},[],"/avatars/image",{"id":85,"group":7,"demo":86,"title":87,"description":88,"parameters":89,"responses":92,"method":32,"url":95,"rate-limit":34,"rate-time":35,"rate-key":36},"getFavicon","import { Client, Avatars } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getFavicon(\n    'https://example.com' // url\n);\n\nconsole.log(result);\n","Get favicon","Use this endpoint to fetch the favorite icon (AKA favicon) of any remote website URL.\n\nThis endpoint does not follow HTTP redirects.",[90],{"name":74,"description":91,"required":15,"type":16,"example":-1},"Website URL which you want to fetch the favicon from.",[93],{"code":30,"contentType":-1,"models":94},[],"/avatars/favicon",{"id":97,"group":7,"demo":98,"title":99,"description":100,"parameters":101,"responses":115,"method":32,"url":118,"rate-limit":34,"rate-time":35,"rate-key":36},"getQR","import { Client, Avatars } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getQR(\n    '\u003CTEXT>', // text\n    1, // size (optional)\n    0, // margin (optional)\n    false // download (optional)\n);\n\nconsole.log(result);\n","Get QR code","Converts a given plain text to a QR code image. You can use the query parameters to change the size and style of the resulting image.\n",[102,105,108,111],{"name":103,"description":104,"required":15,"type":16,"example":-1},"text","Plain text to be converted to QR code image.",{"name":106,"description":107,"required":20,"type":21,"example":-1},"size","QR code size. Pass an integer between 1 to 1000. Defaults to 400.",{"name":109,"description":110,"required":20,"type":21,"example":-1},"margin","Margin from edge. Pass an integer between 0 to 10. Defaults to 1.",{"name":112,"description":113,"required":20,"type":114,"example":-1},"download","Return resulting image with 'Content-Disposition: attachment ' headers for the browser to start downloading it. Pass 0 for no header, or 1 for otherwise. Default value is set to 0.","boolean",[116],{"code":30,"contentType":-1,"models":117},[],"/avatars/qr",{"id":120,"group":7,"demo":121,"title":122,"description":123,"parameters":124,"responses":133,"method":32,"url":136,"rate-limit":34,"rate-time":35,"rate-key":36},"getInitials","import { Client, Avatars } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getInitials(\n    '\u003CNAME>', // name (optional)\n    0, // width (optional)\n    0, // height (optional)\n    '' // background (optional)\n);\n\nconsole.log(result);\n","Get user initials","Use this endpoint to show your user initials avatar icon on your website or app. By default, this route will try to print your logged-in user name or email initials. You can also overwrite the user name if you pass the 'name' parameter. If no name is given and no user is logged, an empty avatar will be returned.\n\nYou can use the color and background params to change the avatar colors. By default, a random theme will be selected. The random theme will persist for the user's initials when reloading the same theme will always return for the same initials.\n\nWhen one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n",[125,128,129,130],{"name":126,"description":127,"required":20,"type":16,"example":-1},"name","Full Name. When empty, current user name or email will be used. Max length: 128 chars.",{"name":18,"description":19,"required":20,"type":21,"example":-1},{"name":23,"description":24,"required":20,"type":21,"example":-1},{"name":131,"description":132,"required":20,"type":16,"example":-1},"background","Changes background color. By default a random color will be picked and stay will persistent to the given name.",[134],{"code":30,"contentType":-1,"models":135},[],"/avatars/initials"],"uses":{"params":["platform","service","version"]}}]}
