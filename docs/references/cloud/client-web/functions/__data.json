{"type":"data","nodes":[{"type":"skip"},{"type":"skip"},{"type":"skip"},{"type":"data","data":[{"service":1,"methods":4},{"name":2,"description":3},"functions","The Functions service allows you to create custom behaviour that can be triggered by any supported Backrush system events or by a predefined schedule.\n\nBackrush Cloud Functions lets you automatically run backend code in response to events triggered by Backrush or by setting it to be executed in a predefined schedule. Your code is stored in a secure way on your Backrush instance and is executed in an isolated environment.\n\nYou can learn more by following our [Cloud Functions tutorial](/docs/products/functions).\n",[5,51,71],{"id":6,"group":7,"demo":8,"title":9,"description":10,"parameters":11,"responses":41,"method":46,"url":47,"rate-limit":48,"rate-time":49,"rate-key":50},"createExecution","executions","import { Client, Functions, ExecutionMethod } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n\nconst result = await functions.createExecution(\n    '\u003CFUNCTION_ID>', // functionId\n    '\u003CBODY>', // body (optional)\n    false, // async (optional)\n    '\u003CPATH>', // path (optional)\n    ExecutionMethod.GET, // method (optional)\n    {}, // headers (optional)\n    '' // scheduledAt (optional)\n);\n\nconsole.log(result);\n","Create execution","Trigger a function execution. The returned object will return you the current execution status. You can ping the `Get Execution` endpoint to get updates on the current execution status. Once this endpoint is called, your function execution process will start asynchronously.",[12,17,22,26,30,34,38],{"name":13,"description":14,"required":15,"type":16,"example":-1},"functionId","Function ID.",true,"string",{"name":18,"description":19,"required":20,"type":16,"example":21},"body","HTTP body of execution. Default value is empty string.",false,"\u003CBODY>",{"name":23,"description":24,"required":20,"type":25,"example":20},"async","Execute code in the background. Default value is false.","boolean",{"name":27,"description":28,"required":20,"type":16,"example":29},"path","HTTP path of execution. Path can include query params. Default value is /","\u003CPATH>",{"name":31,"description":32,"required":20,"type":16,"example":33},"method","HTTP method of execution. Default value is GET.","GET",{"name":35,"description":36,"required":20,"type":16,"example":37},"headers","HTTP headers of execution. Defaults to empty.","",{"name":39,"description":40,"required":20,"type":16,"example":37},"scheduledAt","Scheduled execution time in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. DateTime value must be in future with precision in minutes.",[42],{"code":43,"contentType":44,"models":45},201,"multipart/form-data",[],"post","/functions/{functionId}/executions",0,3600,"url:{url},ip:{ip}",{"id":52,"group":7,"demo":53,"title":54,"description":55,"parameters":56,"responses":61,"method":69,"url":70,"rate-limit":48,"rate-time":49,"rate-key":50},"getExecution","import { Client, Functions } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n\nconst result = await functions.getExecution(\n    '\u003CFUNCTION_ID>', // functionId\n    '\u003CEXECUTION_ID>' // executionId\n);\n\nconsole.log(result);\n","Get execution","Get a function execution log by its unique ID.",[57,58],{"name":13,"description":14,"required":15,"type":16,"example":-1},{"name":59,"description":60,"required":15,"type":16,"example":-1},"executionId","Execution ID.",[62],{"code":63,"contentType":64,"models":65},200,"application/json",[66],{"id":67,"name":68},"execution","Execution","get","/functions/{functionId}/executions/{executionId}",{"id":72,"group":7,"demo":73,"title":74,"description":75,"parameters":76,"responses":82,"method":69,"url":47,"rate-limit":48,"rate-time":49,"rate-key":50},"listExecutions","import { Client, Functions } from \"appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n\nconst result = await functions.listExecutions(\n    '\u003CFUNCTION_ID>', // functionId\n    [] // queries (optional)\n);\n\nconsole.log(result);\n","List executions","Get a list of all the current user function execution logs. You can use the query params to filter your results.",[77,78],{"name":13,"description":14,"required":15,"type":16,"example":-1},{"name":79,"description":80,"required":20,"type":81,"example":-1},"queries","Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://appwrite.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: trigger, status, responseStatusCode, duration, requestMethod, requestPath, deploymentId","array",[83],{"code":63,"contentType":64,"models":84},[85],{"id":86,"name":87},"executionList","Executions List"],"uses":{"params":["platform","service","version"]}}]}
