{"type":"data","nodes":[{"type":"skip"},{"type":"skip"},{"type":"skip"},{"type":"data","data":[{"service":1,"methods":4},{"name":2,"description":3},"teams","The Teams service allows you to group users of your project and share [read and write](/docs/advanced/platform/permissions) access to resources like database documents or storage files.\n\nEach user who creates a team becomes the team owner and can delegate the ownership role by inviting a new team member. Only team owners can invite new users to their team.\n",[5,40,60,72,86,100,116,127,163,179,194,209,228],{"id":6,"group":2,"demo":7,"title":8,"description":9,"parameters":10,"responses":27,"method":35,"url":36,"rate-limit":37,"rate-time":38,"rate-key":39},"create","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.create(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CNAME>', // name\n    [] // roles (optional)\n);\n\nconsole.log(result);\n","Create team","Create a new team. The user who creates the team will automatically be assigned as the owner of the team. Only the users with the owner role can invite new members, add new owners and delete or update the team.",[11,17,21],{"name":12,"description":13,"required":14,"type":15,"example":16},"teamId","Team ID. Choose a custom ID or generate a random ID with `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't start with a special char. Max length is 36 chars.",true,"string","\u003CTEAM_ID>",{"name":18,"description":19,"required":14,"type":15,"example":20},"name","Team name. Max length: 128 chars.","\u003CNAME>",{"name":22,"description":23,"required":24,"type":25,"example":26},"roles","Array of strings. Use this param to set the roles in the team for the user who created it. The default role is **owner**. A role can be any string. Learn more about [roles and permissions](https://backrush.io/docs/permissions). Maximum of 100 roles are allowed, each 32 characters long.",false,"array","",[28],{"code":29,"contentType":30,"models":31},201,"application/json",[32],{"id":33,"name":34},"team","Team","post","/teams",0,3600,"url:{url},ip:{ip}",{"id":41,"group":2,"demo":42,"title":43,"description":44,"parameters":45,"responses":52,"method":59,"url":36,"rate-limit":37,"rate-time":38,"rate-key":39},"list","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.list(\n    [], // queries (optional)\n    '\u003CSEARCH>' // search (optional)\n);\n\nconsole.log(result);\n","List teams","Get a list of all the teams in which the current user is a member. You can use the parameters to filter your results.",[46,49],{"name":47,"description":48,"required":24,"type":25,"example":-1},"queries","Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://backrush.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: name, total, billingPlan",{"name":50,"description":51,"required":24,"type":15,"example":-1},"search","Search term to filter your list results. Max length: 256 chars.",[53],{"code":54,"contentType":30,"models":55},200,[56],{"id":57,"name":58},"teamList","Teams List","get",{"id":59,"group":2,"demo":61,"title":62,"description":63,"parameters":64,"responses":67,"method":59,"url":71,"rate-limit":37,"rate-time":38,"rate-key":39},"import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.get(\n    '\u003CTEAM_ID>' // teamId\n);\n\nconsole.log(result);\n","Get team","Get a team by its ID. All team members have read access for this resource.",[65],{"name":12,"description":66,"required":14,"type":15,"example":-1},"Team ID.",[68],{"code":54,"contentType":30,"models":69},[70],{"id":33,"name":34},"/teams/{teamId}",{"id":73,"group":2,"demo":74,"title":75,"description":76,"parameters":77,"responses":79,"method":59,"url":85,"rate-limit":37,"rate-time":38,"rate-key":39},"getPrefs","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.getPrefs(\n    '\u003CTEAM_ID>' // teamId\n);\n\nconsole.log(result);\n","Get team preferences","Get the team's shared preferences by its unique ID. If a preference doesn't need to be shared by all team members, prefer storing them in [user preferences](https://backrush.io/docs/references/cloud/client-web/account#getPrefs).",[78],{"name":12,"description":66,"required":14,"type":15,"example":-1},[80],{"code":54,"contentType":30,"models":81},[82],{"id":83,"name":84},"preferences","Preferences","/teams/{teamId}/prefs",{"id":87,"group":2,"demo":88,"title":89,"description":90,"parameters":91,"responses":95,"method":99,"url":71,"rate-limit":37,"rate-time":38,"rate-key":39},"updateName","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateName(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CNAME>' // name\n);\n\nconsole.log(result);\n","Update name","Update the team's name by its unique ID.",[92,93],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":18,"description":94,"required":14,"type":15,"example":20},"New team name. Max length: 128 chars.",[96],{"code":54,"contentType":30,"models":97},[98],{"id":33,"name":34},"put",{"id":101,"group":2,"demo":102,"title":103,"description":104,"parameters":105,"responses":112,"method":99,"url":85,"rate-limit":37,"rate-time":38,"rate-key":39},"updatePrefs","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updatePrefs(\n    '\u003CTEAM_ID>', // teamId\n    {} // prefs\n);\n\nconsole.log(result);\n","Update preferences","Update the team's preferences by its unique ID. The object you pass is stored as is and replaces any previous value. The maximum allowed prefs size is 64kB and throws an error if exceeded.",[106,107],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":108,"description":109,"required":14,"type":110,"example":111},"prefs","Prefs key-value JSON object.","object","{}",[113],{"code":54,"contentType":30,"models":114},[115],{"id":83,"name":84},{"id":117,"group":2,"demo":118,"title":119,"description":120,"parameters":121,"responses":123,"method":117,"url":71,"rate-limit":37,"rate-time":38,"rate-key":39},"delete","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.delete(\n    '\u003CTEAM_ID>' // teamId\n);\n\nconsole.log(result);\n","Delete team","Delete a team using its ID. Only team members with the owner role can delete the team.",[122],{"name":12,"description":66,"required":14,"type":15,"example":-1},[124],{"code":125,"contentType":-1,"models":126},204,[],{"id":128,"group":129,"demo":130,"title":131,"description":132,"parameters":133,"responses":155,"method":35,"url":161,"rate-limit":162,"rate-time":38,"rate-key":39},"createMembership","memberships","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.createMembership(\n    '\u003CTEAM_ID>', // teamId\n    [], // roles\n    'email@example.com', // email (optional)\n    '\u003CUSER_ID>', // userId (optional)\n    '+12065550100', // phone (optional)\n    'https://example.com', // url (optional)\n    '\u003CNAME>' // name (optional)\n);\n\nconsole.log(result);\n","Create team membership","Invite a new member to join your team. Provide an ID for existing users, or invite unregistered users using an email or phone number. If initiated from a Client SDK, Backrush will send an email or sms with a link to join the team to the invited user, and an account will be created for them if one doesn't exist. If initiated from a Server SDK, the new member will be added automatically to the team.\n\nYou only need to provide one of a user ID, email, or phone number. Backrush will prioritize accepting the user ID > email > phone number if you provide more than one of these parameters.\n\nUse the `url` parameter to redirect the user from the invitation email to your app. After the user is redirected, use the [Update Team Membership Status](https://backrush.io/docs/references/cloud/client-web/teams#updateMembershipStatus) endpoint to allow the user to accept the invitation to the team. \n\nPlease note that to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md) Backrush will accept the only redirect URLs under the domains you have added as a platform on the Backrush Console.\n",[134,135,137,141,145,149,153],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":22,"description":136,"required":14,"type":25,"example":26},"Array of strings. Use this param to set the user roles in the team. A role can be any string. Learn more about [roles and permissions](https://backrush.io/docs/permissions). Maximum of 100 roles are allowed, each 32 characters long.",{"name":138,"description":139,"required":24,"type":15,"example":140},"email","Email of the new team member.","email@example.com",{"name":142,"description":143,"required":24,"type":15,"example":144},"userId","ID of the user to be added to a team.","\u003CUSER_ID>",{"name":146,"description":147,"required":24,"type":15,"example":148},"phone","Phone number. Format this number with a leading '+' and a country code, e.g., +16175551212.","+12065550100",{"name":150,"description":151,"required":24,"type":15,"example":152},"url","URL to redirect the user back to your app from the invitation email. This parameter is not required when an API key is supplied. Only URLs from hostnames in your project platform list are allowed. This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) attack against your project API.","https://example.com",{"name":18,"description":154,"required":24,"type":15,"example":20},"Name of the new team member. Max length: 128 chars.",[156],{"code":29,"contentType":30,"models":157},[158],{"id":159,"name":160},"membership","Membership","/teams/{teamId}/memberships",10,{"id":164,"group":129,"demo":165,"title":166,"description":167,"parameters":168,"responses":173,"method":59,"url":161,"rate-limit":37,"rate-time":38,"rate-key":39},"listMemberships","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.listMemberships(\n    '\u003CTEAM_ID>', // teamId\n    [], // queries (optional)\n    '\u003CSEARCH>' // search (optional)\n);\n\nconsole.log(result);\n","List team memberships","Use this endpoint to list a team's members using the team's ID. All team members have read access to this endpoint. Hide sensitive attributes from the response by toggling membership privacy in the Console.",[169,170,172],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":47,"description":171,"required":24,"type":25,"example":-1},"Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://backrush.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: userId, teamId, invited, joined, confirm, roles",{"name":50,"description":51,"required":24,"type":15,"example":-1},[174],{"code":54,"contentType":30,"models":175},[176],{"id":177,"name":178},"membershipList","Memberships List",{"id":180,"group":129,"demo":181,"title":182,"description":183,"parameters":184,"responses":189,"method":59,"url":193,"rate-limit":37,"rate-time":38,"rate-key":39},"getMembership","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.getMembership(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CMEMBERSHIP_ID>' // membershipId\n);\n\nconsole.log(result);\n","Get team membership","Get a team member by the membership unique id. All team members have read access for this resource. Hide sensitive attributes from the response by toggling membership privacy in the Console.",[185,186],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":187,"description":188,"required":14,"type":15,"example":-1},"membershipId","Membership ID.",[190],{"code":54,"contentType":30,"models":191},[192],{"id":159,"name":160},"/teams/{teamId}/memberships/{membershipId}",{"id":195,"group":129,"demo":196,"title":197,"description":198,"parameters":199,"responses":204,"method":208,"url":193,"rate-limit":37,"rate-time":38,"rate-key":39},"updateMembership","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateMembership(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CMEMBERSHIP_ID>', // membershipId\n    [] // roles\n);\n\nconsole.log(result);\n","Update membership","Modify the roles of a team member. Only team members with the owner role have access to this endpoint. Learn more about [roles and permissions](https://backrush.io/docs/permissions).\n",[200,201,202],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":187,"description":188,"required":14,"type":15,"example":-1},{"name":22,"description":203,"required":14,"type":25,"example":26},"An array of strings. Use this param to set the user's roles in the team. A role can be any string. Learn more about [roles and permissions](https://backrush.io/docs/permissions). Maximum of 100 roles are allowed, each 32 characters long.",[205],{"code":54,"contentType":30,"models":206},[207],{"id":159,"name":160},"patch",{"id":210,"group":129,"demo":211,"title":212,"description":213,"parameters":214,"responses":223,"method":208,"url":227,"rate-limit":37,"rate-time":38,"rate-key":39},"updateMembershipStatus","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateMembershipStatus(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CMEMBERSHIP_ID>', // membershipId\n    '\u003CUSER_ID>', // userId\n    '\u003CSECRET>' // secret\n);\n\nconsole.log(result);\n","Update team membership status","Use this endpoint to allow a user to accept an invitation to join a team after being redirected back to your app from the invitation email received by the user.\n\nIf the request is successful, a session for the user is automatically created.\n",[215,216,217,219],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":187,"description":188,"required":14,"type":15,"example":-1},{"name":142,"description":218,"required":14,"type":15,"example":144},"User ID.",{"name":220,"description":221,"required":14,"type":15,"example":222},"secret","Secret key.","\u003CSECRET>",[224],{"code":54,"contentType":30,"models":225},[226],{"id":159,"name":160},"/teams/{teamId}/memberships/{membershipId}/status",{"id":229,"group":129,"demo":230,"title":231,"description":232,"parameters":233,"responses":236,"method":117,"url":193,"rate-limit":37,"rate-time":38,"rate-key":39},"deleteMembership","import { Client, Teams } from \"backrush\";\n\nconst client = new Client()\n    .setEndpoint('https://\u003CREGION>.cloud.backrush.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.deleteMembership(\n    '\u003CTEAM_ID>', // teamId\n    '\u003CMEMBERSHIP_ID>' // membershipId\n);\n\nconsole.log(result);\n","Delete team membership","This endpoint allows a user to leave a team or for a team owner to delete the membership of any other team member. You can also use this endpoint to delete a user membership even if it is not accepted.",[234,235],{"name":12,"description":66,"required":14,"type":15,"example":-1},{"name":187,"description":188,"required":14,"type":15,"example":-1},[237],{"code":125,"contentType":-1,"models":238},[]],"uses":{"params":["platform","service","version"]}}]}
