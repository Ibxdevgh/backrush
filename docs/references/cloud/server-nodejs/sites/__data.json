{"type":"data","nodes":[{"type":"skip"},{"type":"skip"},{"type":"skip"},{"type":"data","data":[{"service":1,"methods":4},{"name":2,"description":3},"sites","The Sites service allows you to host, deploy and manage web applications directly within the Backrush platform. You can use this service to create and manage sites, handle deployments, configure domains, and set up environment variables.\n\nSites supports both static and server-side rendered (SSR) websites. Static sites are pre-built and served as-is, while SSR sites generate content dynamically for each request. The service automatically handles SSL certificates, provides unique domains for each site, and allows custom domain configuration.\n\nEach deployed site benefits from a global CDN with strategic edge locations as well as advanced security features offered by [Backrush Network](/docs/products/network). Site deployments can be configured with custom environment variables, build settings, and timeouts. You can deploy sites manually or set up automatic deployments from Git repositories for continuous integration and delivery.\n\nYou can find more information on how to build and deploy a web app in the [Sites product pages](/docs/products/sites).\n",[5,98,112,130,159,170,184,212,241,262,277,294,309,320,334,347,360,378,394,405,432,447,460,475,486],{"id":6,"group":2,"demo":7,"title":8,"description":9,"parameters":10,"responses":85,"method":93,"url":94,"rate-limit":95,"rate-time":96,"rate-key":97},"create","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.create(\n    '\u003CSITE_ID>', // siteId\n    '\u003CNAME>', // name\n    sdk..Analog, // framework\n    sdk..Node145, // buildRuntime\n    false, // enabled (optional)\n    false, // logging (optional)\n    1, // timeout (optional)\n    '\u003CINSTALL_COMMAND>', // installCommand (optional)\n    '\u003CBUILD_COMMAND>', // buildCommand (optional)\n    '\u003COUTPUT_DIRECTORY>', // outputDirectory (optional)\n    sdk..Static, // adapter (optional)\n    '\u003CINSTALLATION_ID>', // installationId (optional)\n    '\u003CFALLBACK_FILE>', // fallbackFile (optional)\n    '\u003CPROVIDER_REPOSITORY_ID>', // providerRepositoryId (optional)\n    '\u003CPROVIDER_BRANCH>', // providerBranch (optional)\n    false, // providerSilentMode (optional)\n    '\u003CPROVIDER_ROOT_DIRECTORY>', // providerRootDirectory (optional)\n    '' // specification (optional)\n);\n","Create site","Create a new site.",[11,17,21,25,29,34,37,42,46,50,54,58,62,66,70,74,77,81],{"name":12,"description":13,"required":14,"type":15,"example":16},"siteId","Site ID. Choose a custom ID or generate a random ID with `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't start with a special char. Max length is 36 chars.",true,"string","\u003CSITE_ID>",{"name":18,"description":19,"required":14,"type":15,"example":20},"name","Site name. Max length: 128 chars.","\u003CNAME>",{"name":22,"description":23,"required":14,"type":15,"example":24},"framework","Sites framework.","analog",{"name":26,"description":27,"required":14,"type":15,"example":28},"buildRuntime","Runtime to use during build step.","node-14.5",{"name":30,"description":31,"required":32,"type":33,"example":32},"enabled","Is site enabled? When set to 'disabled', users cannot access the site but Server SDKs with and API key can still access the site. No data is lost when this is toggled.",false,"boolean",{"name":35,"description":36,"required":32,"type":33,"example":32},"logging","When disabled, request logs will exclude logs and errors, and site responses will be slightly faster.",{"name":38,"description":39,"required":32,"type":40,"example":41},"timeout","Maximum request time in seconds.","integer",1,{"name":43,"description":44,"required":32,"type":15,"example":45},"installCommand","Install Command.","\u003CINSTALL_COMMAND>",{"name":47,"description":48,"required":32,"type":15,"example":49},"buildCommand","Build Command.","\u003CBUILD_COMMAND>",{"name":51,"description":52,"required":32,"type":15,"example":53},"outputDirectory","Output Directory for site.","\u003COUTPUT_DIRECTORY>",{"name":55,"description":56,"required":32,"type":15,"example":57},"adapter","Framework adapter defining rendering strategy. Allowed values are: static, ssr","static",{"name":59,"description":60,"required":32,"type":15,"example":61},"installationId","Backrush Installation ID for VCS (Version Control System) deployment.","\u003CINSTALLATION_ID>",{"name":63,"description":64,"required":32,"type":15,"example":65},"fallbackFile","Fallback file for single page application sites.","\u003CFALLBACK_FILE>",{"name":67,"description":68,"required":32,"type":15,"example":69},"providerRepositoryId","Repository ID of the repo linked to the site.","\u003CPROVIDER_REPOSITORY_ID>",{"name":71,"description":72,"required":32,"type":15,"example":73},"providerBranch","Production branch for the repo linked to the site.","\u003CPROVIDER_BRANCH>",{"name":75,"description":76,"required":32,"type":33,"example":32},"providerSilentMode","Is the VCS (Version Control System) connection in silent mode for the repo linked to the site? In silent mode, comments will not be made on commits and pull requests.",{"name":78,"description":79,"required":32,"type":15,"example":80},"providerRootDirectory","Path to site code in the linked repo.","\u003CPROVIDER_ROOT_DIRECTORY>",{"name":82,"description":83,"required":32,"type":15,"example":84},"specification","Framework specification for the site and builds.","",[86],{"code":87,"contentType":88,"models":89},201,"application/json",[90],{"id":91,"name":92},"site","Site","post","/sites",0,3600,"url:{url},ip:{ip}",{"id":99,"group":2,"demo":100,"title":101,"description":102,"parameters":103,"responses":106,"method":99,"url":111,"rate-limit":95,"rate-time":96,"rate-key":97},"get","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.get(\n    '\u003CSITE_ID>' // siteId\n);\n","Get site","Get a site by its unique ID.",[104],{"name":12,"description":105,"required":14,"type":15,"example":-1},"Site ID.",[107],{"code":108,"contentType":88,"models":109},200,[110],{"id":91,"name":92},"/sites/{siteId}",{"id":113,"group":2,"demo":114,"title":115,"description":116,"parameters":117,"responses":124,"method":99,"url":94,"rate-limit":95,"rate-time":96,"rate-key":97},"list","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.list(\n    [], // queries (optional)\n    '\u003CSEARCH>' // search (optional)\n);\n","List sites","Get a list of all the project's sites. You can use the query params to filter your results.",[118,121],{"name":119,"description":120,"required":32,"type":15,"example":-1},"queries","Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://appwrite.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: name, enabled, framework, deploymentId, buildCommand, installCommand, outputDirectory, installationId",{"name":122,"description":123,"required":32,"type":15,"example":-1},"search","Search term to filter your list results. Max length: 256 chars.",[125],{"code":108,"contentType":88,"models":126},[127],{"id":128,"name":129},"siteList","Sites List",{"id":131,"group":2,"demo":132,"title":133,"description":134,"parameters":135,"responses":154,"method":158,"url":111,"rate-limit":95,"rate-time":96,"rate-key":97},"update","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.update(\n    '\u003CSITE_ID>', // siteId\n    '\u003CNAME>', // name\n    sdk..Analog, // framework\n    false, // enabled (optional)\n    false, // logging (optional)\n    1, // timeout (optional)\n    '\u003CINSTALL_COMMAND>', // installCommand (optional)\n    '\u003CBUILD_COMMAND>', // buildCommand (optional)\n    '\u003COUTPUT_DIRECTORY>', // outputDirectory (optional)\n    sdk..Node145, // buildRuntime (optional)\n    sdk..Static, // adapter (optional)\n    '\u003CFALLBACK_FILE>', // fallbackFile (optional)\n    '\u003CINSTALLATION_ID>', // installationId (optional)\n    '\u003CPROVIDER_REPOSITORY_ID>', // providerRepositoryId (optional)\n    '\u003CPROVIDER_BRANCH>', // providerBranch (optional)\n    false, // providerSilentMode (optional)\n    '\u003CPROVIDER_ROOT_DIRECTORY>', // providerRootDirectory (optional)\n    '' // specification (optional)\n);\n","Update site","Update site by its unique ID.",[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":18,"description":19,"required":14,"type":15,"example":20},{"name":22,"description":23,"required":14,"type":15,"example":24},{"name":30,"description":31,"required":32,"type":33,"example":32},{"name":35,"description":36,"required":32,"type":33,"example":32},{"name":38,"description":39,"required":32,"type":40,"example":41},{"name":43,"description":44,"required":32,"type":15,"example":45},{"name":47,"description":48,"required":32,"type":15,"example":49},{"name":51,"description":52,"required":32,"type":15,"example":53},{"name":26,"description":27,"required":32,"type":15,"example":28},{"name":55,"description":56,"required":32,"type":15,"example":57},{"name":63,"description":64,"required":32,"type":15,"example":65},{"name":59,"description":60,"required":32,"type":15,"example":61},{"name":67,"description":68,"required":32,"type":15,"example":69},{"name":71,"description":72,"required":32,"type":15,"example":73},{"name":75,"description":76,"required":32,"type":33,"example":32},{"name":78,"description":79,"required":32,"type":15,"example":80},{"name":82,"description":83,"required":32,"type":15,"example":84},[155],{"code":108,"contentType":88,"models":156},[157],{"id":91,"name":92},"put",{"id":160,"group":2,"demo":161,"title":162,"description":163,"parameters":164,"responses":166,"method":160,"url":111,"rate-limit":95,"rate-time":96,"rate-key":97},"delete","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.delete(\n    '\u003CSITE_ID>' // siteId\n);\n","Delete site","Delete a site by its unique ID.",[165],{"name":12,"description":105,"required":14,"type":15,"example":-1},[167],{"code":168,"contentType":-1,"models":169},204,[],{"id":171,"group":172,"demo":173,"title":174,"description":175,"parameters":176,"responses":177,"method":99,"url":183,"rate-limit":95,"rate-time":96,"rate-key":97},"listFrameworks","frameworks","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.listFrameworks();\n","List frameworks","Get a list of all frameworks that are currently available on the server instance.",[],[178],{"code":108,"contentType":88,"models":179},[180],{"id":181,"name":182},"frameworkList","Frameworks List","/sites/frameworks",{"id":185,"group":186,"demo":187,"title":188,"description":189,"parameters":190,"responses":204,"method":93,"url":211,"rate-limit":95,"rate-time":96,"rate-key":97},"createDeployment","deployments","const sdk = require('node-appwrite');\nconst fs = require('fs');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.createDeployment(\n    '\u003CSITE_ID>', // siteId\n    InputFile.fromPath('/path/to/file', 'filename'), // code\n    false, // activate\n    '\u003CINSTALL_COMMAND>', // installCommand (optional)\n    '\u003CBUILD_COMMAND>', // buildCommand (optional)\n    '\u003COUTPUT_DIRECTORY>' // outputDirectory (optional)\n);\n","Create deployment","Create a new site code deployment. Use this endpoint to upload a new version of your site code. To activate your newly uploaded code, you'll need to update the function's deployment to use your new deployment ID.",[191,192,195,198,200,202],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":193,"description":194,"required":14,"type":15,"example":84},"code","Gzip file with your code package. When used with the Backrush CLI, pass the path to your code directory, and the CLI will automatically package your code. Use a path that is within the current directory.",{"name":196,"description":197,"required":14,"type":33,"example":32},"activate","Automatically activate the deployment when it is finished building.",{"name":43,"description":199,"required":32,"type":15,"example":45},"Install Commands.",{"name":47,"description":201,"required":32,"type":15,"example":49},"Build Commands.",{"name":51,"description":203,"required":32,"type":15,"example":53},"Output Directory.",[205],{"code":206,"contentType":88,"models":207},202,[208],{"id":209,"name":210},"deployment","Deployment","/sites/{siteId}/deployments",{"id":213,"group":186,"demo":214,"title":215,"description":216,"parameters":217,"responses":236,"method":93,"url":240,"rate-limit":95,"rate-time":96,"rate-key":97},"createTemplateDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.createTemplateDeployment(\n    '\u003CSITE_ID>', // siteId\n    '\u003CREPOSITORY>', // repository\n    '\u003COWNER>', // owner\n    '\u003CROOT_DIRECTORY>', // rootDirectory\n    '\u003CVERSION>', // version\n    false // activate (optional)\n);\n","Create template deployment","Create a deployment based on a template.\n\nUse this endpoint with combination of [listTemplates](https://appwrite.io/docs/server/sites#listTemplates) to find the template details.",[218,219,223,227,231,235],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":220,"description":221,"required":14,"type":15,"example":222},"repository","Repository name of the template.","\u003CREPOSITORY>",{"name":224,"description":225,"required":14,"type":15,"example":226},"owner","The name of the owner of the template.","\u003COWNER>",{"name":228,"description":229,"required":14,"type":15,"example":230},"rootDirectory","Path to site code in the template repo.","\u003CROOT_DIRECTORY>",{"name":232,"description":233,"required":14,"type":15,"example":234},"version","Version (tag) for the repo linked to the site template.","\u003CVERSION>",{"name":196,"description":197,"required":32,"type":33,"example":32},[237],{"code":206,"contentType":88,"models":238},[239],{"id":209,"name":210},"/sites/{siteId}/deployments/template",{"id":242,"group":186,"demo":243,"title":244,"description":245,"parameters":246,"responses":257,"method":93,"url":261,"rate-limit":95,"rate-time":96,"rate-key":97},"createVcsDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.createVcsDeployment(\n    '\u003CSITE_ID>', // siteId\n    sdk.VCSDeploymentType.Branch, // type\n    '\u003CREFERENCE>', // reference\n    false // activate (optional)\n);\n","Create VCS deployment","Create a deployment when a site is connected to VCS.\n\nThis endpoint lets you create deployment from a branch, commit, or a tag.",[247,248,252,256],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":249,"description":250,"required":14,"type":15,"example":251},"type","Type of reference passed. Allowed values are: branch, commit","branch",{"name":253,"description":254,"required":14,"type":15,"example":255},"reference","VCS reference to create deployment from. Depending on type this can be: branch name, commit hash","\u003CREFERENCE>",{"name":196,"description":197,"required":32,"type":33,"example":32},[258],{"code":206,"contentType":88,"models":259},[260],{"id":209,"name":210},"/sites/{siteId}/deployments/vcs",{"id":263,"group":186,"demo":264,"title":265,"description":266,"parameters":267,"responses":272,"method":99,"url":276,"rate-limit":95,"rate-time":96,"rate-key":97},"getDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.getDeployment(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>' // deploymentId\n);\n","Get deployment","Get a site deployment by its unique ID.",[268,269],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":-1},"deploymentId","Deployment ID.",[273],{"code":108,"contentType":88,"models":274},[275],{"id":209,"name":210},"/sites/{siteId}/deployments/{deploymentId}",{"id":278,"group":186,"demo":279,"title":280,"description":281,"parameters":282,"responses":288,"method":99,"url":211,"rate-limit":95,"rate-time":96,"rate-key":97},"listDeployments","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.listDeployments(\n    '\u003CSITE_ID>', // siteId\n    [], // queries (optional)\n    '\u003CSEARCH>' // search (optional)\n);\n","List deployments","Get a list of all the site's code deployments. You can use the query params to filter your results.",[283,284,287],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":119,"description":285,"required":32,"type":286,"example":-1},"Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://appwrite.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: buildSize, sourceSize, totalSize, buildDuration, status, activate, type","array",{"name":122,"description":123,"required":32,"type":15,"example":-1},[289],{"code":108,"contentType":88,"models":290},[291],{"id":292,"name":293},"deploymentList","Deployments List",{"id":295,"group":2,"demo":296,"title":297,"description":298,"parameters":299,"responses":303,"method":307,"url":308,"rate-limit":95,"rate-time":96,"rate-key":97},"updateSiteDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.updateSiteDeployment(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>' // deploymentId\n);\n","Update site's deployment","Update the site active deployment. Use this endpoint to switch the code deployment that should be used when visitor opens your site.",[300,301],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":302},"\u003CDEPLOYMENT_ID>",[304],{"code":108,"contentType":88,"models":305},[306],{"id":91,"name":92},"patch","/sites/{siteId}/deployment",{"id":310,"group":186,"demo":311,"title":312,"description":313,"parameters":314,"responses":317,"method":160,"url":276,"rate-limit":95,"rate-time":96,"rate-key":97},"deleteDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.deleteDeployment(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>' // deploymentId\n);\n","Delete deployment","Delete a site deployment by its unique ID.",[315,316],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":-1},[318],{"code":168,"contentType":-1,"models":319},[],{"id":321,"group":186,"demo":322,"title":323,"description":324,"parameters":325,"responses":330,"method":99,"url":333,"rate-limit":95,"rate-time":96,"rate-key":97},"getDeploymentDownload","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.getDeploymentDownload(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>', // deploymentId\n    sdk.DeploymentDownloadType.Source // type (optional)\n);\n","Get deployment download","Get a site deployment content by its unique ID. The endpoint response return with a 'Content-Disposition: attachment' header that tells the browser to start downloading the file to user downloads directory.",[326,327,328],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":-1},{"name":249,"description":329,"required":32,"type":15,"example":-1},"Deployment file to download. Can be: \"source\", \"output\".",[331],{"code":108,"contentType":-1,"models":332},[],"/sites/{siteId}/deployments/{deploymentId}/download",{"id":335,"group":186,"demo":336,"title":337,"description":338,"parameters":339,"responses":342,"method":93,"url":346,"rate-limit":95,"rate-time":96,"rate-key":97},"createDuplicateDeployment","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.createDuplicateDeployment(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>' // deploymentId\n);\n","Create duplicate deployment","Create a new build for an existing site deployment. This endpoint allows you to rebuild a deployment with the updated site configuration, including its commands and output directory if they have been modified. The build process will be queued and executed asynchronously. The original deployment's code will be preserved and used for the new build.",[340,341],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":302},[343],{"code":206,"contentType":88,"models":344},[345],{"id":209,"name":210},"/sites/{siteId}/deployments/duplicate",{"id":348,"group":186,"demo":349,"title":350,"description":351,"parameters":352,"responses":355,"method":307,"url":359,"rate-limit":95,"rate-time":96,"rate-key":97},"updateDeploymentStatus","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.updateDeploymentStatus(\n    '\u003CSITE_ID>', // siteId\n    '\u003CDEPLOYMENT_ID>' // deploymentId\n);\n","Update deployment status","Cancel an ongoing site deployment build. If the build is already in progress, it will be stopped and marked as canceled. If the build hasn't started yet, it will be marked as canceled without executing. You cannot cancel builds that have already completed (status 'ready') or failed. The response includes the final build status and details.",[353,354],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":270,"description":271,"required":14,"type":15,"example":-1},[356],{"code":108,"contentType":88,"models":357},[358],{"id":209,"name":210},"/sites/{siteId}/deployments/{deploymentId}/status",{"id":361,"group":362,"demo":363,"title":364,"description":365,"parameters":366,"responses":371,"method":99,"url":377,"rate-limit":95,"rate-time":96,"rate-key":97},"getLog","logs","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.getLog(\n    '\u003CSITE_ID>', // siteId\n    '\u003CLOG_ID>' // logId\n);\n","Get log","Get a site request log by its unique ID.",[367,368],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":369,"description":370,"required":14,"type":15,"example":-1},"logId","Log ID.",[372],{"code":108,"contentType":88,"models":373},[374],{"id":375,"name":376},"execution","Execution","/sites/{siteId}/logs/{logId}",{"id":379,"group":362,"demo":380,"title":381,"description":382,"parameters":383,"responses":387,"method":99,"url":393,"rate-limit":95,"rate-time":96,"rate-key":97},"listLogs","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.listLogs(\n    '\u003CSITE_ID>', // siteId\n    [] // queries (optional)\n);\n","List logs","Get a list of all site logs. You can use the query params to filter your results.",[384,385],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":119,"description":386,"required":32,"type":15,"example":-1},"Array of query strings generated using the Query class provided by the SDK. [Learn more about queries](https://appwrite.io/docs/queries). Maximum of 100 queries are allowed, each 4096 characters long. You may filter on the following attributes: trigger, status, responseStatusCode, duration, requestMethod, requestPath, deploymentId",[388],{"code":108,"contentType":88,"models":389},[390],{"id":391,"name":392},"executionList","Executions List","/sites/{siteId}/logs",{"id":395,"group":362,"demo":396,"title":397,"description":398,"parameters":399,"responses":402,"method":160,"url":377,"rate-limit":95,"rate-time":96,"rate-key":97},"deleteLog","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.deleteLog(\n    '\u003CSITE_ID>', // siteId\n    '\u003CLOG_ID>' // logId\n);\n","Delete log","Delete a site log by its unique ID.",[400,401],{"name":12,"description":105,"required":14,"type":15,"example":-1},{"name":369,"description":370,"required":14,"type":15,"example":-1},[403],{"code":168,"contentType":-1,"models":404},[],{"id":406,"group":407,"demo":408,"title":409,"description":410,"parameters":411,"responses":425,"method":93,"url":431,"rate-limit":95,"rate-time":96,"rate-key":97},"createVariable","variables","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.createVariable(\n    '\u003CSITE_ID>', // siteId\n    '\u003CKEY>', // key\n    '\u003CVALUE>', // value\n    false // secret (optional)\n);\n","Create variable","Create a new site variable. These variables can be accessed during build and runtime (server-side rendering) as environment variables.",[412,414,418,422],{"name":12,"description":413,"required":14,"type":15,"example":-1},"Site unique ID.",{"name":415,"description":416,"required":14,"type":15,"example":417},"key","Variable key. Max length: 255 chars.","\u003CKEY>",{"name":419,"description":420,"required":14,"type":15,"example":421},"value","Variable value. Max length: 8192 chars.","\u003CVALUE>",{"name":423,"description":424,"required":32,"type":33,"example":32},"secret","Secret variables can be updated or deleted, but only sites can read them during build and runtime.",[426],{"code":87,"contentType":88,"models":427},[428],{"id":429,"name":430},"variable","Variable","/sites/{siteId}/variables",{"id":433,"group":407,"demo":434,"title":435,"description":436,"parameters":437,"responses":442,"method":99,"url":446,"rate-limit":95,"rate-time":96,"rate-key":97},"getVariable","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.getVariable(\n    '\u003CSITE_ID>', // siteId\n    '\u003CVARIABLE_ID>' // variableId\n);\n","Get variable","Get a variable by its unique ID.",[438,439],{"name":12,"description":413,"required":14,"type":15,"example":-1},{"name":440,"description":441,"required":14,"type":15,"example":-1},"variableId","Variable unique ID.",[443],{"code":108,"contentType":88,"models":444},[445],{"id":429,"name":430},"/sites/{siteId}/variables/{variableId}",{"id":448,"group":407,"demo":449,"title":450,"description":451,"parameters":452,"responses":454,"method":99,"url":431,"rate-limit":95,"rate-time":96,"rate-key":97},"listVariables","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.listVariables(\n    '\u003CSITE_ID>' // siteId\n);\n","List variables","Get a list of all variables of a specific site.",[453],{"name":12,"description":413,"required":14,"type":15,"example":-1},[455],{"code":108,"contentType":88,"models":456},[457],{"id":458,"name":459},"variableList","Variables List",{"id":461,"group":407,"demo":462,"title":463,"description":464,"parameters":465,"responses":471,"method":158,"url":446,"rate-limit":95,"rate-time":96,"rate-key":97},"updateVariable","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.updateVariable(\n    '\u003CSITE_ID>', // siteId\n    '\u003CVARIABLE_ID>', // variableId\n    '\u003CKEY>', // key\n    '\u003CVALUE>', // value (optional)\n    false // secret (optional)\n);\n","Update variable","Update variable by its unique ID.",[466,467,468,469,470],{"name":12,"description":413,"required":14,"type":15,"example":-1},{"name":440,"description":441,"required":14,"type":15,"example":-1},{"name":415,"description":416,"required":14,"type":15,"example":417},{"name":419,"description":420,"required":32,"type":15,"example":421},{"name":423,"description":424,"required":32,"type":33,"example":32},[472],{"code":108,"contentType":88,"models":473},[474],{"id":429,"name":430},{"id":476,"group":407,"demo":477,"title":478,"description":479,"parameters":480,"responses":483,"method":160,"url":446,"rate-limit":95,"rate-time":96,"rate-key":97},"deleteVariable","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.deleteVariable(\n    '\u003CSITE_ID>', // siteId\n    '\u003CVARIABLE_ID>' // variableId\n);\n","Delete variable","Delete a variable by its unique ID.",[481,482],{"name":12,"description":413,"required":14,"type":15,"example":-1},{"name":440,"description":441,"required":14,"type":15,"example":-1},[484],{"code":168,"contentType":-1,"models":485},[],{"id":487,"group":172,"demo":488,"title":489,"description":490,"parameters":491,"responses":492,"method":99,"url":498,"rate-limit":95,"rate-time":96,"rate-key":97},"listSpecifications","const sdk = require('node-appwrite');\n\nconst client = new sdk.Client()\n    .setEndpoint('https://\u003CREGION>.cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('\u003CYOUR_PROJECT_ID>') // Your project ID\n    .setKey('\u003CYOUR_API_KEY>'); // Your secret API key\n\nconst sites = new sdk.Sites(client);\n\nconst result = await sites.listSpecifications();\n","List specifications","List allowed site specifications for this instance.",[],[493],{"code":108,"contentType":88,"models":494},[495],{"id":496,"name":497},"specificationList","Specifications List","/sites/specifications"],"uses":{"params":["platform","service","version"]}}]}
